package PjamProject1;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */


import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.JPanel;
import javax.swing.Timer;

/**
 *
 * @author activ, phillip
 */
public class PjamPlay extends javax.swing.JFrame {
    private final String wordArray[] = {"abstract", "cemetery", "nurse", "pharmacy", "climbing"};
    private int randomIndex = (int) (Math.random() * 5);
    private final String wordChosen = wordArray[randomIndex];
    private String[] wordProgress = new String[wordChosen.length()];
    private ArrayList<String> wrongChoices = new ArrayList<String>();
    private StringBuilder sb = new StringBuilder();
    private int highScore = 100;
    private int guesses = 6;
    private boolean endGame = false;
    /**
     * Creates new form PjamPlay
     */
    public PjamPlay() {
        initComponents();
        setTitle("Hangman");
        setPreferredSize(new Dimension(600, 400));
        setLocationRelativeTo(null);
        setDefaultCloseOperation(EXIT_ON_CLOSE);
        this.pack();
        //Function to have time and date display on top right
        startClock();
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButtonA = new javax.swing.JButton();
        jButtonB = new javax.swing.JButton();
        jButtonC = new javax.swing.JButton();
        jButtonD = new javax.swing.JButton();
        jButtonE = new javax.swing.JButton();
        jButtonF = new javax.swing.JButton();
        jButtonG = new javax.swing.JButton();
        jButtonH = new javax.swing.JButton();
        jButtonI = new javax.swing.JButton();
        jButtonJ = new javax.swing.JButton();
        jButtonK = new javax.swing.JButton();
        jButtonL = new javax.swing.JButton();
        jButtonM = new javax.swing.JButton();
        jButtonN = new javax.swing.JButton();
        jButtonO = new javax.swing.JButton();
        jButtonP = new javax.swing.JButton();
        jButtonQ = new javax.swing.JButton();
        jButtonR = new javax.swing.JButton();
        jButtonS = new javax.swing.JButton();
        jButtonT = new javax.swing.JButton();
        jButtonU = new javax.swing.JButton();
        jButtonV = new javax.swing.JButton();
        jButtonW = new javax.swing.JButton();
        jButtonX = new javax.swing.JButton();
        jButtonY = new javax.swing.JButton();
        jButtonZ = new javax.swing.JButton();
        clockLabel = new java.awt.Label();
        wordLines = new javax.swing.JPanel(){
            @Override
            public void paintComponent(Graphics g)
            {
                int numberOfLines = -1;
                super.paintComponent(g); // Do the original draw
                if (randomIndex == 0) {
                    //g.drawString("Abstract", 60, 60);
                    numberOfLines = 8;
                }
                else if (randomIndex == 1) {
                    //g.drawString("Cemetery", 60, 60);
                    numberOfLines = 8;
                }
                else if (randomIndex == 2) {
                    //g.drawString("nurse", 60, 60);
                    numberOfLines = 5;
                }
                else if (randomIndex == 3) {
                    //g.drawString("pharmacy", 60, 60);
                    numberOfLines = 8;
                }
                else if (randomIndex == 4) {
                    //g.drawString("climbing", 60, 60);
                    numberOfLines = 8;
                }
                else {
                    dispose();
                    System.out.println("Error, no word was chosen");
                    System.exit(1);
                }
                //loop that creates lines equally spaced based on word chosen
                //width = 400
                System.out.println("Highscore = " + highScore);
                System.out.println("Guesses = " + guesses);

                int startPoint = 0;
                for (int i = 0; i < numberOfLines; i++) {
                    g.drawLine(startPoint, 0, startPoint + 15, 0);
                    startPoint += 30;
                }
                if (guesses == 0) {
                    endGame = true;
                }
                for (int i = 0; i < wordProgress.length; i++ ) {
                    if (wordProgress[i] == null) {
                        break;
                    }
                    if (i == wordProgress.length - 1) {
                        if (wordProgress[i] != null) {
                            endGame = true;
                            System.out.println("Game win");
                        }
                    }
                }
                if (endGame) {
                    System.out.println("Game over");
                    dispose();
                    //End frame goes here
                }
            }
        };
        wrongLettersDisplay = new java.awt.Label();
        wordUI = new javax.swing.JPanel(){
            @Override
            public void paintComponent(Graphics g) {
                super.paintComponent(g);
                int numberOfLines = -1;
                if (randomIndex == 0) {
                    //g.drawString("Abstract", 60, 60);
                    numberOfLines = 8;
                }
                else if (randomIndex == 1) {
                    //g.drawString("Cemetery", 60, 60);
                    numberOfLines = 8;
                }
                else if (randomIndex == 2) {
                    //g.drawString("nurse", 60, 60);
                    numberOfLines = 5;
                }
                else if (randomIndex == 3) {
                    //g.drawString("pharmacy", 60, 60);
                    numberOfLines = 8;
                }
                else if (randomIndex == 4) {
                    //g.drawString("climbing", 60, 60);
                    numberOfLines = 8;
                }
                else {
                    dispose();
                    System.out.println("Error, no word was chosen");
                    System.exit(1);
                }
                //loop that creates lines equally spaced based on word chosen
                //width = 400
                int startPoint = 0;
                for (int i = 0; i < numberOfLines; i++) {
                    if (wordProgress[i] != null)
                    g.drawString(wordProgress[i], startPoint + 15, wordLines.getHeight()-5);
                    startPoint += 30;
                }
            }
        };

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jButtonA.setText("A");
        jButtonA.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonAMouseClicked(evt);
            }
        });

        jButtonB.setText("B");
        jButtonB.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonBMouseClicked(evt);
            }
        });

        jButtonC.setText("C");
        jButtonC.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonCMouseClicked(evt);
            }
        });

        jButtonD.setText("D");
        jButtonD.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonDMouseClicked(evt);
            }
        });

        jButtonE.setText("E");
        jButtonE.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonEMouseClicked(evt);
            }
        });

        jButtonF.setText("F");
        jButtonF.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonFMouseClicked(evt);
            }
        });

        jButtonG.setText("G");
        jButtonG.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonGMouseClicked(evt);
            }
        });

        jButtonH.setText("H");
        jButtonH.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonHMouseClicked(evt);
            }
        });

        jButtonI.setText("I");
        jButtonI.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonIMouseClicked(evt);
            }
        });

        jButtonJ.setText("J");
        jButtonJ.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonJMouseClicked(evt);
            }
        });

        jButtonK.setText("K");
        jButtonK.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonKMouseClicked(evt);
            }
        });

        jButtonL.setText("L");
        jButtonL.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonLMouseClicked(evt);
            }
        });

        jButtonM.setText("M");
        jButtonM.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonMMouseClicked(evt);
            }
        });

        jButtonN.setText("N");
        jButtonN.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonNMouseClicked(evt);
            }
        });

        jButtonO.setText("O");
        jButtonO.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonOMouseClicked(evt);
            }
        });

        jButtonP.setText("P");
        jButtonP.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonPMouseClicked(evt);
            }
        });

        jButtonQ.setText("Q");
        jButtonQ.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonQMouseClicked(evt);
            }
        });

        jButtonR.setText("R");
        jButtonR.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonRMouseClicked(evt);
            }
        });

        jButtonS.setText("S");
        jButtonS.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonSMouseClicked(evt);
            }
        });

        jButtonT.setText("T");
        jButtonT.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonTMouseClicked(evt);
            }
        });

        jButtonU.setText("U");
        jButtonU.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonUMouseClicked(evt);
            }
        });

        jButtonV.setText("V");
        jButtonV.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonVMouseClicked(evt);
            }
        });

        jButtonW.setText("W");
        jButtonW.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonWMouseClicked(evt);
            }
        });

        jButtonX.setText("X");
        jButtonX.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonXMouseClicked(evt);
            }
        });

        jButtonY.setText("Y");
        jButtonY.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonYMouseClicked(evt);
            }
        });

        jButtonZ.setText("Z");
        jButtonZ.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonZMouseClicked(evt);
            }
        });

        clockLabel.setAlignment(java.awt.Label.RIGHT);
        clockLabel.setFont(new java.awt.Font("Courier New", 1, 12)); // NOI18N
        clockLabel.setText("label1");

        javax.swing.GroupLayout wordLinesLayout = new javax.swing.GroupLayout(wordLines);
        wordLines.setLayout(wordLinesLayout);
        wordLinesLayout.setHorizontalGroup(
            wordLinesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        wordLinesLayout.setVerticalGroup(
            wordLinesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 30, Short.MAX_VALUE)
        );

        for (String s:wrongChoices) {
            sb.append(s);
            sb.append("\t");
            System.out.println(sb.toString());
        }
        if (sb.length() != 0) {
            wrongLettersDisplay.setText(sb.toString());
        }

        javax.swing.GroupLayout wordUILayout = new javax.swing.GroupLayout(wordUI);
        wordUI.setLayout(wordUILayout);
        wordUILayout.setHorizontalGroup(
            wordUILayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        wordUILayout.setVerticalGroup(
            wordUILayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 28, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(wrongLettersDisplay, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(77, 77, 77)
                            .addComponent(wordUI, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(25, 25, 25)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(clockLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jButtonJ, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(jButtonK, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(jButtonL, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(jButtonM, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(jButtonN, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(jButtonO, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(jButtonP, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(jButtonQ, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(jButtonR, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jButtonS, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(jButtonT, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(jButtonU, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(jButtonV, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(jButtonW, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(jButtonX, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(jButtonY, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(jButtonZ, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(32, 32, 32))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jButtonA, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(wordLines, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(jButtonB, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(18, 18, 18)
                                            .addComponent(jButtonC, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(14, 14, 14)
                                            .addComponent(jButtonD, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(22, 22, 22)
                                            .addComponent(jButtonE, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(18, 18, 18)
                                            .addComponent(jButtonF, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(18, 18, 18)
                                            .addComponent(jButtonG, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(18, 18, 18)
                                            .addComponent(jButtonH, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(18, 18, 18)
                                            .addComponent(jButtonI, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))))))))
                .addContainerGap(26, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(clockLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(wrongLettersDisplay, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 53, Short.MAX_VALUE)
                .addComponent(wordUI, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(wordLines, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonA)
                    .addComponent(jButtonB)
                    .addComponent(jButtonC)
                    .addComponent(jButtonD)
                    .addComponent(jButtonE)
                    .addComponent(jButtonF)
                    .addComponent(jButtonG)
                    .addComponent(jButtonH)
                    .addComponent(jButtonI))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonK)
                    .addComponent(jButtonL)
                    .addComponent(jButtonM)
                    .addComponent(jButtonN)
                    .addComponent(jButtonO)
                    .addComponent(jButtonP)
                    .addComponent(jButtonQ)
                    .addComponent(jButtonR)
                    .addComponent(jButtonJ))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonU)
                    .addComponent(jButtonV)
                    .addComponent(jButtonW)
                    .addComponent(jButtonX)
                    .addComponent(jButtonY)
                    .addComponent(jButtonZ)
                    .addComponent(jButtonT)
                    .addComponent(jButtonS))
                .addGap(20, 20, 20))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonAMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonAMouseClicked
        // Disable button when clicked
        jButtonA.setEnabled(false);
        System.out.println("Button pressed");
        boolean hasLetter = false;
        
        //Check word chosen for letter that was pressed
        for (int i = 0; i < wordChosen.length(); i++) {
            //if the word has an 'a' in it
            String letter = wordChosen.substring(i, i+1);
            if (letter.equals("a")) {
                System.out.println("letter a found at index " + i);
                hasLetter = true;
                wordProgress[i] = "a";
            }
        }
        //User guesses incorrectly
        if (!hasLetter && !wrongChoices.contains("a")) {
            highScore -= 10;
            guesses -= 1;
            System.out.println("Doesnt have letter");
            wrongChoices.add("a");
        }
        repaint();
    }//GEN-LAST:event_jButtonAMouseClicked

    private void jButtonBMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonBMouseClicked
        // Disable button when clicked
        jButtonB.setEnabled(false);
        boolean hasLetter = false;
        
        //Check word chosen for letter that was pressed
        for (int i = 0; i < wordChosen.length(); i++) {
            //if the word has an 'a' in it
            String letter = wordChosen.substring(i, i+1);
            if (letter.equals("b")) {
                System.out.println("letter b found at index " + i);
                hasLetter = true;
                wordProgress[i] = "b";
            }
        }
        //User guesses incorrectly
        if (!hasLetter && !wrongChoices.contains("b")) {
            highScore -= 10;
            guesses -= 1;
            System.out.println("Doesnt have letter");
            wrongChoices.add("b");
        }
            repaint();
        
    }//GEN-LAST:event_jButtonBMouseClicked

    private void jButtonCMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonCMouseClicked
        // Disable button when clicked
        jButtonC.setEnabled(false); 
        boolean hasLetter = false;
        
        //Check word chosen for letter that was pressed
        for (int i = 0; i < wordChosen.length(); i++) {
            //if the word has an 'a' in it
            String letter = wordChosen.substring(i, i+1);
            if (letter.equals("c")) {
                System.out.println("letter c found at index " + i);
                hasLetter = true;
                wordProgress[i] = "c";
            }
        }
        //User guesses incorrectly
        if (!hasLetter && !wrongChoices.contains("c")) {
            highScore -= 10;
            guesses -= 1;
            System.out.println("Doesnt have letter");
            wrongChoices.add("c");           
        }
        
        repaint();
    }//GEN-LAST:event_jButtonCMouseClicked

    private void jButtonDMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonDMouseClicked
        // Disable button when clicked
        jButtonD.setEnabled(false);
        boolean hasLetter = false;
        
        //Check word chosen for letter that was pressed
        for (int i = 0; i < wordChosen.length(); i++) {
            //if the word has an 'a' in it
            String letter = wordChosen.substring(i, i+1);
            if (letter.equals("d")) {
                System.out.println("letter d found at index " + i);
                hasLetter = true;
                wordProgress[i] = "d";
            }
        }
        //User guesses incorrectly
        if (!hasLetter && !wrongChoices.contains("d")) {
            highScore -= 10;
            guesses -= 1;
            System.out.println("Doesnt have letter");
            wrongChoices.add("d");            
        }
        
        //User guesses correctly
        repaint();
    }//GEN-LAST:event_jButtonDMouseClicked

    private void jButtonEMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonEMouseClicked
        // Disable button when clicked
        jButtonE.setEnabled(false);
        boolean hasLetter = false;
        
        //Check word chosen for letter that was pressed
        for (int i = 0; i < wordChosen.length(); i++) {
            //if the word has an 'a' in it
            String letter = wordChosen.substring(i, i+1);
            if (letter.equals("e")) {
                System.out.println("letter e found at index " + i);
                hasLetter = true;
                wordProgress[i] = "e";
            }
        }
        //User guesses incorrectly
        if (!hasLetter && !wrongChoices.contains("e")) {
            highScore -= 10;
            guesses -= 1;
            System.out.println("Doesnt have letter");
            wrongChoices.add("e");        
        }
            repaint();
    }//GEN-LAST:event_jButtonEMouseClicked

    private void jButtonFMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonFMouseClicked
        // Disable button when clicked
        jButtonF.setEnabled(false);
        boolean hasLetter = false;
        
        //Check word chosen for letter that was pressed
        for (int i = 0; i < wordChosen.length(); i++) {
            //if the word has an 'a' in it
            String letter = wordChosen.substring(i, i+1);
            if (letter.equals("f")) {
                System.out.println("letter f found at index " + i);
                hasLetter = true;
                wordProgress[i] = "f";
            }
        }
        //User guesses incorrectly
        if (!hasLetter && !wrongChoices.contains("f")) {
            highScore -= 10;
            guesses -= 1;
            System.out.println("Doesnt have letter");
            wrongChoices.add("f");        
        }

            repaint();
    }//GEN-LAST:event_jButtonFMouseClicked

    private void jButtonGMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonGMouseClicked
        // Disable button when clicked
        jButtonG.setEnabled(false);
        boolean hasLetter = false;
        
        //Check word chosen for letter that was pressed
        for (int i = 0; i < wordChosen.length(); i++) {
            //if the word has an 'a' in it
            String letter = wordChosen.substring(i, i+1);
            if (letter.equals("g")) {
                System.out.println("letter a found at index " + i);
                hasLetter = true;
                wordProgress[i] = "g";
            }
        }
        //User guesses incorrectly
        if (!hasLetter && !wrongChoices.contains("g")) {
            highScore -= 10;
            guesses -= 1;
            System.out.println("Doesnt have letter");
            wrongChoices.add("g");
        }
        
        //User guesses correctly
            repaint();
    }//GEN-LAST:event_jButtonGMouseClicked

    private void jButtonHMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonHMouseClicked
        // Disable button when clicked
        jButtonH.setEnabled(false);
        boolean hasLetter = false;
        
        //Check word chosen for letter that was pressed
        for (int i = 0; i < wordChosen.length(); i++) {
            //if the word has an 'a' in it
            String letter = wordChosen.substring(i, i+1);
            if (letter.equals("h")) {
                System.out.println("letter a found at index " + i);
                hasLetter = true;
                wordProgress[i] = "h";
            }
        }
        //User guesses incorrectly
        if (!hasLetter && !wrongChoices.contains("h")) {
            highScore -= 10;
            guesses -= 1;
            System.out.println("Doesnt have letter");
            wrongChoices.add("h");
        }
        repaint();
    }//GEN-LAST:event_jButtonHMouseClicked

    private void jButtonIMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonIMouseClicked
        // Disable button when clicked
        jButtonI.setEnabled(false);
        boolean hasLetter = false;
        
        //Check word chosen for letter that was pressed
        for (int i = 0; i < wordChosen.length(); i++) {
            //if the word has an 'a' in it
            String letter = wordChosen.substring(i, i+1);
            if (letter.equals("i")) {
                System.out.println("letter a found at index " + i);
                hasLetter = true;
                wordProgress[i] = "i";
            }
        }
        //User guesses incorrectly
        if (!hasLetter && !wrongChoices.contains("i")) {
            highScore -= 10;
            guesses -= 1;
            System.out.println("Doesnt have letter");
            wrongChoices.add("i");           
        }
        
        repaint();
    }//GEN-LAST:event_jButtonIMouseClicked

    private void jButtonJMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonJMouseClicked

        // Disable button when clicked
        jButtonJ.setEnabled(false);
        boolean hasLetter = false;
        
        //Check word chosen for letter that was pressed
        for (int i = 0; i < wordChosen.length(); i++) {
            //if the word has an 'a' in it
            String letter = wordChosen.substring(i, i+1);
            if (letter.equals("j")) {
                System.out.println("letter a found at index " + i);
                hasLetter = true;
                wordProgress[i] = "j";
            }
        }
        //User guesses incorrectly
        if (!hasLetter && !wrongChoices.contains("j")) {
            highScore -= 10;
            guesses -= 1;
            System.out.println("Doesnt have letter");
            wrongChoices.add("j");            
        }
            repaint();
    }//GEN-LAST:event_jButtonJMouseClicked

    private void jButtonKMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonKMouseClicked

        // Disable button when clicked
        jButtonK.setEnabled(false);
        System.out.println("Button K pressed");
        boolean hasLetter = false;
        
        //Check word chosen for letter that was pressed
        for (int i = 0; i < wordChosen.length(); i++) {
            //if the word has an 'a' in it
            String letter = wordChosen.substring(i, i+1);
            if (letter.equals("k")) {
                System.out.println("letter a found at index " + i);
                hasLetter = true;
                wordProgress[i] = "k";
            }
        }
        //User guesses incorrectly
        if (!hasLetter && !wrongChoices.contains("k")) {
            highScore -= 10;
            guesses -= 1;
            wrongChoices.add("k");
        }
            repaint();
    }//GEN-LAST:event_jButtonKMouseClicked

    private void jButtonLMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonLMouseClicked

        // Disable button when clicked
        jButtonL.setEnabled(false);
        boolean hasLetter = false;
        
        //Check word chosen for letter that was pressed
        for (int i = 0; i < wordChosen.length(); i++) {
            //if the word has an 'a' in it
            String letter = wordChosen.substring(i, i+1);
            if (letter.equals("l")) {
                System.out.println("letter a found at index " + i);
                hasLetter = true;
                wordProgress[i] = "l";
            }
        }
        //User guesses incorrectly
        if (!hasLetter && !wrongChoices.contains("l")) {
            highScore -= 10;
            guesses -= 1;
            wrongChoices.add("l");
        }
            repaint();
    }//GEN-LAST:event_jButtonLMouseClicked

    private void jButtonMMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonMMouseClicked
  
        // Disable button when clicked
        jButtonM.setEnabled(false);
        boolean hasLetter = false;
        
        //Check word chosen for letter that was pressed
        for (int i = 0; i < wordChosen.length(); i++) {
            //if the word has an 'a' in it
            String letter = wordChosen.substring(i, i+1);
            if (letter.equals("m")) {
                System.out.println("letter a found at index " + i);
                hasLetter = true;
                wordProgress[i] = "m";
            }
        }
        //User guesses incorrectly
        if (!hasLetter && !wrongChoices.contains("m")) {
            highScore -= 10;
            guesses -= 1;
            wrongChoices.add("m");
        }

            repaint();
    }//GEN-LAST:event_jButtonMMouseClicked

    private void jButtonNMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonNMouseClicked

        // Disable button when clicked
        jButtonN.setEnabled(false);boolean hasLetter = false;
        
        //Check word chosen for letter that was pressed
        for (int i = 0; i < wordChosen.length(); i++) {
            //if the word has an 'a' in it
            String letter = wordChosen.substring(i, i+1);
            if (letter.equals("n")) {
                System.out.println("letter a found at index " + i);
                hasLetter = true;
                wordProgress[i] = "n";
            }
        }
        //User guesses incorrectly
        if (!hasLetter && !wrongChoices.contains("n")) {
            highScore -= 10;
            guesses -= 1;
            wrongChoices.add("n");
        }
            repaint();
    }//GEN-LAST:event_jButtonNMouseClicked

    private void jButtonOMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonOMouseClicked

        // Disable button when clicked
        jButtonO.setEnabled(false);
        boolean hasLetter = false;
        
        //Check word chosen for letter that was pressed
        for (int i = 0; i < wordChosen.length(); i++) {
            //if the word has an 'a' in it
            String letter = wordChosen.substring(i, i+1);
            if (letter.equals("o")) {
                System.out.println("letter a found at index " + i);
                hasLetter = true;
                wordProgress[i] = "o";
            }
        }
        //User guesses incorrectly
        if (!hasLetter && !wrongChoices.contains("o")) {
            highScore -= 10;
            guesses -= 1;
            wrongChoices.add("o");
        }
        
            repaint();
    }//GEN-LAST:event_jButtonOMouseClicked

    private void jButtonPMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonPMouseClicked

        // Disable button when clicked
        jButtonP.setEnabled(false);
        boolean hasLetter = false;
        
        //Check word chosen for letter that was pressed
        for (int i = 0; i < wordChosen.length(); i++) {
            //if the word has an 'a' in it
            String letter = wordChosen.substring(i, i+1);
            if (letter.equals("p")) {
                System.out.println("letter a found at index " + i);
                hasLetter = true;
                wordProgress[i] = "p";
            }
        }
        //User guesses incorrectly
        if (!hasLetter && !wrongChoices.contains("p")) {
            highScore -= 10;
            guesses -= 1;
            wrongChoices.add("p");
        }
        
            repaint();
    }//GEN-LAST:event_jButtonPMouseClicked

    private void jButtonQMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonQMouseClicked

        // Disable button when clicked
        jButtonQ.setEnabled(false);
        boolean hasLetter = false;
        
        //Check word chosen for letter that was pressed
        for (int i = 0; i < wordChosen.length(); i++) {
            //if the word has an 'a' in it
            String letter = wordChosen.substring(i, i+1);
            if (letter.equals("q")) {
                System.out.println("letter a found at index " + i);
                hasLetter = true;
                wordProgress[i] = "q";
            }
        }
        //User guesses incorrectly
        if (!hasLetter && !wrongChoices.contains("q")) {
            highScore -= 10;
            guesses -= 1;
            wrongChoices.add("q");
        }
            repaint();
    }//GEN-LAST:event_jButtonQMouseClicked

    private void jButtonRMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonRMouseClicked

        // Disable button when clicked
        jButtonR.setEnabled(false);
        boolean hasLetter = false;
        
        //Check word chosen for letter that was pressed
        for (int i = 0; i < wordChosen.length(); i++) {
            //if the word has an 'a' in it
            String letter = wordChosen.substring(i, i+1);
            if (letter.equals("r")) {
                System.out.println("letter a found at index " + i);
                hasLetter = true;
                wordProgress[i] = "r";
            }
        }
        //User guesses incorrectly
        if (!hasLetter && !wrongChoices.contains("r")) {
            highScore -= 10;
            guesses -= 1;
            wrongChoices.add("r");
        }
        
            repaint();
    }//GEN-LAST:event_jButtonRMouseClicked

    private void jButtonSMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonSMouseClicked

        // Disable button when clicked
        jButtonS.setEnabled(false);
        boolean hasLetter = false;
        
        //Check word chosen for letter that was pressed
        for (int i = 0; i < wordChosen.length(); i++) {
            //if the word has an 'a' in it
            String letter = wordChosen.substring(i, i+1);
            if (letter.equals("s")) {
                System.out.println("letter a found at index " + i);
                hasLetter = true;
                wordProgress[i] = "s";
            }
        }
        //User guesses incorrectly
        if (!hasLetter && !wrongChoices.contains("s")) {
            highScore -= 10;
            guesses -= 1;
            wrongChoices.add("s");
        }
        
            repaint();
    }//GEN-LAST:event_jButtonSMouseClicked

    private void jButtonTMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonTMouseClicked

        // Disable button when clicked
        jButtonT.setEnabled(false);
        boolean hasLetter = false;
        
        //Check word chosen for letter that was pressed
        for (int i = 0; i < wordChosen.length(); i++) {
            //if the word has an 'a' in it
            String letter = wordChosen.substring(i, i+1);
            if (letter.equals("t")) {
                System.out.println("letter a found at index " + i);
                hasLetter = true;
                wordProgress[i] = "t";
            }
        }
        //User guesses incorrectly
        if (!hasLetter && !wrongChoices.contains("t")) {
            highScore -= 10;
            guesses -= 1;
            wrongChoices.add("t");
        }
        
            repaint();
    }//GEN-LAST:event_jButtonTMouseClicked

    private void jButtonUMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonUMouseClicked

        // Disable button when clicked
        jButtonU.setEnabled(false);
        boolean hasLetter = false;
        
        //Check word chosen for letter that was pressed
        for (int i = 0; i < wordChosen.length(); i++) {
            //if the word has an 'a' in it
            String letter = wordChosen.substring(i, i+1);
            if (letter.equals("u")) {
                System.out.println("letter a found at index " + i);
                hasLetter = true;
                wordProgress[i] = "u";
            }
        }
        //User guesses incorrectly
        if (!hasLetter && !wrongChoices.contains("u")) {
            highScore -= 10;
            guesses -= 1;
            wrongChoices.add("u");
        }
        
            repaint();
    }//GEN-LAST:event_jButtonUMouseClicked

    private void jButtonVMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonVMouseClicked

        // Disable button when clicked
        jButtonV.setEnabled(false);
        boolean hasLetter = false;
        
        //Check word chosen for letter that was pressed
        for (int i = 0; i < wordChosen.length(); i++) {
            //if the word has an 'a' in it
            String letter = wordChosen.substring(i, i+1);
            if (letter.equals("v")) {
                System.out.println("letter a found at index " + i);
                hasLetter = true;
                wordProgress[i] = "v";
            }
        }
        //User guesses incorrectly
        if (!hasLetter && !wrongChoices.contains("v")) {
            highScore -= 10;
            guesses -= 1;
            wrongChoices.add("v");
        }
        
            repaint();
    }//GEN-LAST:event_jButtonVMouseClicked

    private void jButtonWMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonWMouseClicked

        // Disable button when clicked
        jButtonW.setEnabled(false);
        boolean hasLetter = false;
        
        //Check word chosen for letter that was pressed
        for (int i = 0; i < wordChosen.length(); i++) {
            //if the word has an 'a' in it
            String letter = wordChosen.substring(i, i+1);
            if (letter.equals("w")) {
                System.out.println("letter a found at index " + i);
                hasLetter = true;
                wordProgress[i] = "w";
            }
        }
        //User guesses incorrectly
        if (!hasLetter && !wrongChoices.contains("w")) {
            highScore -= 10;
            guesses -= 1;
            wrongChoices.add("w");
        }
            repaint();

    }//GEN-LAST:event_jButtonWMouseClicked

    private void jButtonXMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonXMouseClicked

        // Disable button when clicked
        jButtonX.setEnabled(false);
        boolean hasLetter = false;
        
        //Check word chosen for letter that was pressed
        for (int i = 0; i < wordChosen.length(); i++) {
            //if the word has an 'a' in it
            String letter = wordChosen.substring(i, i+1);
            if (letter.equals("x")) {
                System.out.println("letter a found at index " + i);
                hasLetter = true;
                wordProgress[i] = "x";
            }
        }
        //User guesses incorrectly
        if (!hasLetter && !wrongChoices.contains("x")) {
            highScore -= 10;
            guesses -= 1;
            wrongChoices.add("x");
        }
            repaint();
    }//GEN-LAST:event_jButtonXMouseClicked

    private void jButtonYMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonYMouseClicked

        // Disable button when clicked
        jButtonY.setEnabled(false);
        boolean hasLetter = false;
        
        //Check word chosen for letter that was pressed
        for (int i = 0; i < wordChosen.length(); i++) {
            //if the word has an 'a' in it
            String letter = wordChosen.substring(i, i+1);
            if (letter.equals("y")) {
                System.out.println("letter a found at index " + i);
                hasLetter = true;
                wordProgress[i] = "y";
            }
        }
        //User guesses incorrectly
        if (!hasLetter && !wrongChoices.contains("y")) {
            highScore -= 10;
            guesses -= 1;
            wrongChoices.add("y");
        }
            repaint();
    }//GEN-LAST:event_jButtonYMouseClicked

    private void jButtonZMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonZMouseClicked

        // Disable button when clicked
        jButtonZ.setEnabled(false);
        boolean hasLetter = false;
        
        //Check word chosen for letter that was pressed
        for (int i = 0; i < wordChosen.length(); i++) {
            //if the word has an 'a' in it
            String letter = wordChosen.substring(i, i+1);
            if (letter.equals("z")) {
                System.out.println("letter a found at index " + i);
                hasLetter = true;
                wordProgress[i] = "z";
            }
        }
        //User guesses incorrectly
        if (!hasLetter && !wrongChoices.contains("z")) {
            highScore -= 10;
            guesses -= 1;
            wrongChoices.add("z");
        }
            repaint();
    }//GEN-LAST:event_jButtonZMouseClicked

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened

    }//GEN-LAST:event_formWindowOpened

    //Function that displays and updates time and date on top right every 0.1 seconds
    public void startClock() {
        Timer timer = new Timer(100, new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent evt) {
                String dateTime = new Date().toString();
                
                clockLabel.setText(dateTime);
                
            }
        });
        timer.start();
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PjamPlay.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PjamPlay.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PjamPlay.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PjamPlay.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new PjamPlay().setVisible(true);
            }
        });
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private java.awt.Label clockLabel;
    private javax.swing.JButton jButtonA;
    private javax.swing.JButton jButtonB;
    private javax.swing.JButton jButtonC;
    private javax.swing.JButton jButtonD;
    private javax.swing.JButton jButtonE;
    private javax.swing.JButton jButtonF;
    private javax.swing.JButton jButtonG;
    private javax.swing.JButton jButtonH;
    private javax.swing.JButton jButtonI;
    private javax.swing.JButton jButtonJ;
    private javax.swing.JButton jButtonK;
    private javax.swing.JButton jButtonL;
    private javax.swing.JButton jButtonM;
    private javax.swing.JButton jButtonN;
    private javax.swing.JButton jButtonO;
    private javax.swing.JButton jButtonP;
    private javax.swing.JButton jButtonQ;
    private javax.swing.JButton jButtonR;
    private javax.swing.JButton jButtonS;
    private javax.swing.JButton jButtonT;
    private javax.swing.JButton jButtonU;
    private javax.swing.JButton jButtonV;
    private javax.swing.JButton jButtonW;
    private javax.swing.JButton jButtonX;
    private javax.swing.JButton jButtonY;
    private javax.swing.JButton jButtonZ;
    private javax.swing.JPanel wordLines;
    private javax.swing.JPanel wordUI;
    private java.awt.Label wrongLettersDisplay;
    // End of variables declaration//GEN-END:variables
}


