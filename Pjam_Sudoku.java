
import java.awt.Color;
import java.awt.Dimension;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.util.Date;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.Timer;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author nathan
 */
public class Pjam_Sudoku extends javax.swing.JFrame {
    static int numberPressed;
    static Scanner sc;
    static String stringOfNumber;
    public int highScore;
    
        /*
        Booleans for each and every empty box
        Solution to the sudoku board since no algorithm is used
        */
    static boolean [][] sudokuBool = new boolean[9][9];
    private boolean played;
     /**
     * Creates new form P jam_Sudoku
     */
    public Pjam_Sudoku() {
        
        //Initial setup for frame
        highScore = 540;
        played = false;
        initComponents();
        setTitle("Sudoku");
        setPreferredSize(new Dimension(1000, 800));
        this.pack();
        setLocationRelativeTo(null);
        startClock();   //Time and date method
        sudokuReset();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        clockLabel = new java.awt.Label();
        sudokuBoardLayered = new javax.swing.JLayeredPane();
        board01 = new javax.swing.JLabel();
        board02 = new javax.swing.JLabel();
        board04 = new javax.swing.JLabel();
        board06 = new javax.swing.JLabel();
        board07 = new javax.swing.JLabel();
        board10 = new javax.swing.JLabel();
        board11 = new javax.swing.JLabel();
        board12 = new javax.swing.JLabel();
        board13 = new javax.swing.JLabel();
        board14 = new javax.swing.JLabel();
        board15 = new javax.swing.JLabel();
        board17 = new javax.swing.JLabel();
        board18 = new javax.swing.JLabel();
        board20 = new javax.swing.JLabel();
        board22 = new javax.swing.JLabel();
        board23 = new javax.swing.JLabel();
        board24 = new javax.swing.JLabel();
        board25 = new javax.swing.JLabel();
        board28 = new javax.swing.JLabel();
        board31 = new javax.swing.JLabel();
        board33 = new javax.swing.JLabel();
        board35 = new javax.swing.JLabel();
        board38 = new javax.swing.JLabel();
        board40 = new javax.swing.JLabel();
        board41 = new javax.swing.JLabel();
        board42 = new javax.swing.JLabel();
        board43 = new javax.swing.JLabel();
        board45 = new javax.swing.JLabel();
        board46 = new javax.swing.JLabel();
        board47 = new javax.swing.JLabel();
        board48 = new javax.swing.JLabel();
        board50 = new javax.swing.JLabel();
        board53 = new javax.swing.JLabel();
        board55 = new javax.swing.JLabel();
        board57 = new javax.swing.JLabel();
        board60 = new javax.swing.JLabel();
        board63 = new javax.swing.JLabel();
        board64 = new javax.swing.JLabel();
        board65 = new javax.swing.JLabel();
        board66 = new javax.swing.JLabel();
        board68 = new javax.swing.JLabel();
        board70 = new javax.swing.JLabel();
        board71 = new javax.swing.JLabel();
        board73 = new javax.swing.JLabel();
        board74 = new javax.swing.JLabel();
        board75 = new javax.swing.JLabel();
        board76 = new javax.swing.JLabel();
        board77 = new javax.swing.JLabel();
        board78 = new javax.swing.JLabel();
        board81 = new javax.swing.JLabel();
        board82 = new javax.swing.JLabel();
        board84 = new javax.swing.JLabel();
        board86 = new javax.swing.JLabel();
        board87 = new javax.swing.JLabel();
        sudokuBoard = new javax.swing.JLabel();
        invalidInputLabel = new javax.swing.JLabel();
        submitButton = new javax.swing.JButton();
        quitButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(null);

        clockLabel.setAlignment(java.awt.Label.CENTER);
        clockLabel.setText("clock and date");
        getContentPane().add(clockLabel);
        clockLabel.setBounds(720, 0, 270, 60);

        board01.setBackground(java.awt.Color.white);
        board01.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        board01.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        board01.setOpaque(true);
        board01.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                board01MouseClicked(evt);
            }
        });
        board01.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                board01KeyPressed(evt);
            }
        });
        sudokuBoardLayered.add(board01);
        board01.setBounds(80, 10, 50, 50);

        board02.setBackground(java.awt.Color.white);
        board02.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        board02.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        board02.setOpaque(true);
        board02.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                board02MouseClicked(evt);
            }
        });
        board02.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                board02KeyPressed(evt);
            }
        });
        sudokuBoardLayered.add(board02);
        board02.setBounds(150, 10, 50, 50);

        board04.setBackground(java.awt.Color.white);
        board04.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        board04.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        board04.setMaximumSize(new java.awt.Dimension(36, 14));
        board04.setMinimumSize(new java.awt.Dimension(36, 14));
        board04.setOpaque(true);
        board04.setPreferredSize(new java.awt.Dimension(36, 14));
        board04.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                board04MouseClicked(evt);
            }
        });
        board04.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                board04KeyPressed(evt);
            }
        });
        sudokuBoardLayered.add(board04);
        board04.setBounds(285, 10, 50, 50);

        board06.setBackground(java.awt.Color.white);
        board06.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        board06.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        board06.setOpaque(true);
        board06.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                board06MouseClicked(evt);
            }
        });
        board06.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                board06KeyPressed(evt);
            }
        });
        sudokuBoardLayered.add(board06);
        board06.setBounds(420, 10, 50, 50);

        board07.setBackground(java.awt.Color.white);
        board07.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        board07.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        board07.setOpaque(true);
        board07.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                board07MouseClicked(evt);
            }
        });
        board07.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                board07KeyPressed(evt);
            }
        });
        sudokuBoardLayered.add(board07);
        board07.setBounds(490, 10, 50, 50);

        board10.setBackground(java.awt.Color.white);
        board10.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        board10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        board10.setOpaque(true);
        board10.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                board10MouseClicked(evt);
            }
        });
        board10.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                board10KeyPressed(evt);
            }
        });
        sudokuBoardLayered.add(board10);
        board10.setBounds(10, 80, 50, 50);

        board11.setBackground(java.awt.Color.white);
        board11.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        board11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        board11.setOpaque(true);
        board11.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                board11MouseClicked(evt);
            }
        });
        board11.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                board11KeyPressed(evt);
            }
        });
        sudokuBoardLayered.add(board11);
        board11.setBounds(80, 80, 50, 50);

        board12.setBackground(java.awt.Color.white);
        board12.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        board12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        board12.setOpaque(true);
        board12.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                board12MouseClicked(evt);
            }
        });
        board12.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                board12KeyPressed(evt);
            }
        });
        sudokuBoardLayered.add(board12);
        board12.setBounds(150, 80, 50, 50);

        board13.setBackground(java.awt.Color.white);
        board13.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        board13.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        board13.setOpaque(true);
        board13.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                board13MouseClicked(evt);
            }
        });
        board13.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                board13KeyPressed(evt);
            }
        });
        sudokuBoardLayered.add(board13);
        board13.setBounds(220, 80, 50, 50);

        board14.setBackground(java.awt.Color.white);
        board14.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        board14.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        board14.setOpaque(true);
        board14.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                board14MouseClicked(evt);
            }
        });
        board14.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                board14KeyPressed(evt);
            }
        });
        sudokuBoardLayered.add(board14);
        board14.setBounds(290, 80, 50, 50);

        board15.setBackground(java.awt.Color.white);
        board15.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        board15.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        board15.setOpaque(true);
        board15.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                board15MouseClicked(evt);
            }
        });
        board15.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                board15KeyPressed(evt);
            }
        });
        sudokuBoardLayered.add(board15);
        board15.setBounds(350, 80, 50, 50);

        board17.setBackground(java.awt.Color.white);
        board17.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        board17.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        board17.setOpaque(true);
        board17.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                board17MouseClicked(evt);
            }
        });
        board17.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                board17KeyPressed(evt);
            }
        });
        sudokuBoardLayered.add(board17);
        board17.setBounds(490, 80, 50, 50);

        board18.setBackground(java.awt.Color.white);
        board18.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        board18.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        board18.setOpaque(true);
        board18.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                board18MouseClicked(evt);
            }
        });
        board18.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                board18KeyPressed(evt);
            }
        });
        sudokuBoardLayered.add(board18);
        board18.setBounds(560, 80, 50, 50);

        board20.setBackground(java.awt.Color.white);
        board20.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        board20.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        board20.setOpaque(true);
        board20.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                board20MouseClicked(evt);
            }
        });
        board20.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                board20KeyPressed(evt);
            }
        });
        sudokuBoardLayered.add(board20);
        board20.setBounds(10, 150, 50, 50);

        board22.setBackground(java.awt.Color.white);
        board22.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        board22.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        board22.setOpaque(true);
        board22.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                board22MouseClicked(evt);
            }
        });
        board22.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                board22KeyPressed(evt);
            }
        });
        sudokuBoardLayered.add(board22);
        board22.setBounds(150, 150, 50, 50);

        board23.setBackground(java.awt.Color.white);
        board23.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        board23.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        board23.setOpaque(true);
        board23.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                board23MouseClicked(evt);
            }
        });
        board23.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                board23KeyPressed(evt);
            }
        });
        sudokuBoardLayered.add(board23);
        board23.setBounds(220, 150, 50, 50);

        board24.setBackground(java.awt.Color.white);
        board24.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        board24.setOpaque(true);
        board24.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                board24MouseClicked(evt);
            }
        });
        board24.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                board24KeyPressed(evt);
            }
        });
        sudokuBoardLayered.add(board24);
        board24.setBounds(290, 150, 50, 50);

        board25.setBackground(java.awt.Color.white);
        board25.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        board25.setOpaque(true);
        board25.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                board25MouseClicked(evt);
            }
        });
        board25.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                board25KeyPressed(evt);
            }
        });
        sudokuBoardLayered.add(board25);
        board25.setBounds(350, 150, 50, 50);

        board28.setBackground(java.awt.Color.white);
        board28.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        board28.setOpaque(true);
        board28.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                board28MouseClicked(evt);
            }
        });
        board28.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                board28KeyPressed(evt);
            }
        });
        sudokuBoardLayered.add(board28);
        board28.setBounds(560, 150, 50, 50);

        board31.setBackground(java.awt.Color.white);
        board31.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        board31.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        board31.setOpaque(true);
        board31.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                board31MouseClicked(evt);
            }
        });
        board31.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                board31KeyPressed(evt);
            }
        });
        sudokuBoardLayered.add(board31);
        board31.setBounds(80, 230, 50, 50);

        board33.setBackground(java.awt.Color.white);
        board33.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        board33.setOpaque(true);
        board33.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                board33MouseClicked(evt);
            }
        });
        board33.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                board33KeyPressed(evt);
            }
        });
        sudokuBoardLayered.add(board33);
        board33.setBounds(220, 230, 50, 50);

        board35.setBackground(java.awt.Color.white);
        board35.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        board35.setOpaque(true);
        board35.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                board35MouseClicked(evt);
            }
        });
        board35.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                board35KeyPressed(evt);
            }
        });
        sudokuBoardLayered.add(board35);
        board35.setBounds(350, 230, 50, 50);

        board38.setBackground(java.awt.Color.white);
        board38.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        board38.setOpaque(true);
        board38.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                board38MouseClicked(evt);
            }
        });
        board38.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                board38KeyPressed(evt);
            }
        });
        sudokuBoardLayered.add(board38);
        board38.setBounds(560, 230, 50, 50);

        board40.setBackground(java.awt.Color.white);
        board40.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        board40.setOpaque(true);
        board40.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                board40MouseClicked(evt);
            }
        });
        board40.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                board40KeyPressed(evt);
            }
        });
        sudokuBoardLayered.add(board40);
        board40.setBounds(10, 300, 50, 50);

        board41.setBackground(java.awt.Color.white);
        board41.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        board41.setOpaque(true);
        board41.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                board41MouseClicked(evt);
            }
        });
        board41.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                board41KeyPressed(evt);
            }
        });
        sudokuBoardLayered.add(board41);
        board41.setBounds(80, 300, 50, 50);

        board42.setBackground(java.awt.Color.white);
        board42.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        board42.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                board42MouseClicked(evt);
            }
        });
        board42.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                board42KeyPressed(evt);
            }
        });
        sudokuBoardLayered.add(board42);
        board42.setBounds(150, 300, 50, 50);

        board43.setBackground(java.awt.Color.white);
        board43.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        board43.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                board43MouseClicked(evt);
            }
        });
        board43.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                board43KeyPressed(evt);
            }
        });
        sudokuBoardLayered.add(board43);
        board43.setBounds(220, 300, 50, 50);

        board45.setBackground(java.awt.Color.white);
        board45.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        board45.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                board45MouseClicked(evt);
            }
        });
        board45.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                board45KeyPressed(evt);
            }
        });
        sudokuBoardLayered.add(board45);
        board45.setBounds(350, 300, 50, 50);

        board46.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        board46.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                board46MouseClicked(evt);
            }
        });
        board46.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                board46KeyPressed(evt);
            }
        });
        sudokuBoardLayered.add(board46);
        board46.setBounds(420, 300, 50, 50);

        board47.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        board47.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                board47MouseClicked(evt);
            }
        });
        board47.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                board47KeyPressed(evt);
            }
        });
        sudokuBoardLayered.add(board47);
        board47.setBounds(490, 300, 50, 50);

        board48.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        board48.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                board48MouseClicked(evt);
            }
        });
        board48.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                board48KeyPressed(evt);
            }
        });
        sudokuBoardLayered.add(board48);
        board48.setBounds(560, 300, 50, 50);

        board50.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        board50.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                board50MouseClicked(evt);
            }
        });
        board50.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                board50KeyPressed(evt);
            }
        });
        sudokuBoardLayered.add(board50);
        board50.setBounds(10, 370, 50, 50);

        board53.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        board53.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                board53MouseClicked(evt);
            }
        });
        board53.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                board53KeyPressed(evt);
            }
        });
        sudokuBoardLayered.add(board53);
        board53.setBounds(220, 370, 50, 50);

        board55.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        board55.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                board55MouseClicked(evt);
            }
        });
        board55.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                board55KeyPressed(evt);
            }
        });
        sudokuBoardLayered.add(board55);
        board55.setBounds(350, 370, 50, 50);

        board57.setBackground(java.awt.Color.white);
        board57.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        board57.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                board57MouseClicked(evt);
            }
        });
        board57.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                board57KeyPressed(evt);
            }
        });
        sudokuBoardLayered.add(board57);
        board57.setBounds(490, 374, 50, 50);

        board60.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        board60.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                board60MouseClicked(evt);
            }
        });
        board60.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                board60KeyPressed(evt);
            }
        });
        sudokuBoardLayered.add(board60);
        board60.setBounds(10, 440, 60, 60);

        board63.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        board63.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                board63MouseClicked(evt);
            }
        });
        board63.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                board63KeyPressed(evt);
            }
        });
        sudokuBoardLayered.add(board63);
        board63.setBounds(210, 440, 60, 60);

        board64.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        board64.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                board64MouseClicked(evt);
            }
        });
        board64.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                board64KeyPressed(evt);
            }
        });
        sudokuBoardLayered.add(board64);
        board64.setBounds(280, 440, 60, 60);

        board65.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        board65.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                board65MouseClicked(evt);
            }
        });
        board65.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                board65KeyPressed(evt);
            }
        });
        sudokuBoardLayered.add(board65);
        board65.setBounds(350, 440, 60, 60);

        board66.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        board66.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                board66MouseClicked(evt);
            }
        });
        board66.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                board66KeyPressed(evt);
            }
        });
        sudokuBoardLayered.add(board66);
        board66.setBounds(420, 440, 60, 60);

        board68.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        board68.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                board68MouseClicked(evt);
            }
        });
        board68.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                board68KeyPressed(evt);
            }
        });
        sudokuBoardLayered.add(board68);
        board68.setBounds(550, 440, 60, 60);

        board70.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        board70.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                board70MouseClicked(evt);
            }
        });
        board70.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                board70KeyPressed(evt);
            }
        });
        sudokuBoardLayered.add(board70);
        board70.setBounds(10, 510, 50, 70);

        board71.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        board71.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                board71MouseClicked(evt);
            }
        });
        board71.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                board71KeyPressed(evt);
            }
        });
        sudokuBoardLayered.add(board71);
        board71.setBounds(80, 510, 50, 70);

        board73.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        board73.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                board73MouseClicked(evt);
            }
        });
        board73.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                board73KeyPressed(evt);
            }
        });
        sudokuBoardLayered.add(board73);
        board73.setBounds(220, 510, 50, 70);

        board74.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        board74.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                board74MouseClicked(evt);
            }
        });
        board74.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                board74KeyPressed(evt);
            }
        });
        sudokuBoardLayered.add(board74);
        board74.setBounds(280, 510, 60, 70);

        board75.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        board75.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                board75MouseClicked(evt);
            }
        });
        board75.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                board75KeyPressed(evt);
            }
        });
        sudokuBoardLayered.add(board75);
        board75.setBounds(350, 510, 50, 70);

        board76.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        board76.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                board76MouseClicked(evt);
            }
        });
        board76.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                board76KeyPressed(evt);
            }
        });
        sudokuBoardLayered.add(board76);
        board76.setBounds(420, 510, 60, 70);

        board77.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        board77.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                board77MouseClicked(evt);
            }
        });
        board77.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                board77KeyPressed(evt);
            }
        });
        sudokuBoardLayered.add(board77);
        board77.setBounds(490, 510, 60, 70);

        board78.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        board78.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                board78MouseClicked(evt);
            }
        });
        board78.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                board78KeyPressed(evt);
            }
        });
        sudokuBoardLayered.add(board78);
        board78.setBounds(560, 510, 60, 70);

        board81.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        board81.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                board81MouseClicked(evt);
            }
        });
        board81.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                board81KeyPressed(evt);
            }
        });
        sudokuBoardLayered.add(board81);
        board81.setBounds(80, 580, 60, 70);

        board82.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        board82.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                board82MouseClicked(evt);
            }
        });
        board82.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                board82KeyPressed(evt);
            }
        });
        sudokuBoardLayered.add(board82);
        board82.setBounds(150, 580, 50, 70);

        board84.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        board84.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                board84MouseClicked(evt);
            }
        });
        board84.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                board84KeyPressed(evt);
            }
        });
        sudokuBoardLayered.add(board84);
        board84.setBounds(280, 580, 60, 70);

        board86.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        board86.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                board86MouseClicked(evt);
            }
        });
        board86.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                board86KeyPressed(evt);
            }
        });
        sudokuBoardLayered.add(board86);
        board86.setBounds(420, 580, 60, 70);

        board87.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        board87.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                board87MouseClicked(evt);
            }
        });
        board87.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                board87KeyPressed(evt);
            }
        });
        sudokuBoardLayered.add(board87);
        board87.setBounds(490, 580, 60, 70);

        sudokuBoard.setIcon(new javax.swing.ImageIcon(getClass().getResource("/sudoku board.jpg"))); // NOI18N
        sudokuBoard.setText("jLabel1");
        sudokuBoardLayered.add(sudokuBoard);
        sudokuBoard.setBounds(0, 0, 620, 650);

        getContentPane().add(sudokuBoardLayered);
        sudokuBoardLayered.setBounds(90, 70, 620, 650);

        invalidInputLabel.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        invalidInputLabel.setForeground(java.awt.Color.red);
        getContentPane().add(invalidInputLabel);
        invalidInputLabel.setBounds(100, 0, 470, 70);

        submitButton.setText("SUBMIT");
        submitButton.setToolTipText("Submit board for checking");
        submitButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                submitButtonMouseClicked(evt);
            }
        });
        getContentPane().add(submitButton);
        submitButton.setBounds(790, 680, 100, 40);

        quitButton.setText("QUIT");
        quitButton.setToolTipText("Quit the game without gaining any points");
        quitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quitButtonActionPerformed(evt);
            }
        });
        getContentPane().add(quitButton);
        quitButton.setBounds(800, 70, 100, 40);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /*
    Methods that print the selected board label and sets the program's focus
    to the label clicked
    This allows for key listeners to work since they need the component's focus
    */
    private void board01MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_board01MouseClicked
        printClicked(0, 1);
        board01.requestFocusInWindow();
    }//GEN-LAST:event_board01MouseClicked

    private void board02MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_board02MouseClicked
        printClicked(0, 2);
        board02.requestFocusInWindow();
    }//GEN-LAST:event_board02MouseClicked

    private void board04MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_board04MouseClicked
        printClicked(0, 4);
        board04.requestFocusInWindow();
    }//GEN-LAST:event_board04MouseClicked

    private void board06MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_board06MouseClicked
        printClicked(0,6);
        board06.requestFocusInWindow();
    }//GEN-LAST:event_board06MouseClicked

    private void board07MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_board07MouseClicked
        printClicked(0,7);
        board07.requestFocusInWindow();
    }//GEN-LAST:event_board07MouseClicked

    private void board10MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_board10MouseClicked
        printClicked(1,0);
        board10.requestFocusInWindow();
    }//GEN-LAST:event_board10MouseClicked

    private void board11MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_board11MouseClicked
        printClicked(1, 1);
        board11.requestFocusInWindow();
    }//GEN-LAST:event_board11MouseClicked

    private void board12MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_board12MouseClicked
        printClicked(1,2);
        board12.requestFocusInWindow();
    }//GEN-LAST:event_board12MouseClicked

    private void board13MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_board13MouseClicked
        printClicked(1,3);
        board13.requestFocusInWindow();
    }//GEN-LAST:event_board13MouseClicked

    private void board14MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_board14MouseClicked
        printClicked(1,4);
        board14.requestFocusInWindow();
    }//GEN-LAST:event_board14MouseClicked

    private void board15MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_board15MouseClicked
        printClicked(1,5);
        board15.requestFocusInWindow();
    }//GEN-LAST:event_board15MouseClicked

    private void board17MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_board17MouseClicked
        printClicked(1,7);
        board17.requestFocusInWindow();
    }//GEN-LAST:event_board17MouseClicked

    private void board18MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_board18MouseClicked
        printClicked(1,8);
        board18.requestFocusInWindow();
    }//GEN-LAST:event_board18MouseClicked

    private void board20MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_board20MouseClicked
        printClicked(2,0);
        board20.requestFocusInWindow();
    }//GEN-LAST:event_board20MouseClicked

    private void board22MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_board22MouseClicked
        printClicked(2, 2);
        board22.requestFocusInWindow();
    }//GEN-LAST:event_board22MouseClicked

    private void board23MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_board23MouseClicked
        printClicked(2,3);
        board23.requestFocusInWindow();
    }//GEN-LAST:event_board23MouseClicked

    private void board24MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_board24MouseClicked
        printClicked(2,4);
        board24.requestFocusInWindow();
    }//GEN-LAST:event_board24MouseClicked

    private void board25MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_board25MouseClicked
        printClicked(2,5);
        board25.requestFocusInWindow();
    }//GEN-LAST:event_board25MouseClicked

    private void board28MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_board28MouseClicked
        printClicked(2,8);
        board28.requestFocusInWindow();
    }//GEN-LAST:event_board28MouseClicked

    private void board31MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_board31MouseClicked
        printClicked(3,1);
        board31.requestFocusInWindow();
    }//GEN-LAST:event_board31MouseClicked

    private void board33MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_board33MouseClicked
        printClicked(3,3);
        board33.requestFocusInWindow();
    }//GEN-LAST:event_board33MouseClicked

    private void board35MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_board35MouseClicked
        printClicked(3,5);
        board35.requestFocusInWindow();
    }//GEN-LAST:event_board35MouseClicked

    private void board38MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_board38MouseClicked
        printClicked(3,8);
        board38.requestFocusInWindow();
    }//GEN-LAST:event_board38MouseClicked

    private void board40MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_board40MouseClicked
        printClicked(4,0);
        board40.requestFocusInWindow();
    }//GEN-LAST:event_board40MouseClicked

    private void board41MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_board41MouseClicked
        printClicked(4,1);
        board41.requestFocusInWindow();
    }//GEN-LAST:event_board41MouseClicked

    private void board42MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_board42MouseClicked
        printClicked(4,2);
        board42.requestFocusInWindow();
    }//GEN-LAST:event_board42MouseClicked

    private void board43MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_board43MouseClicked
        printClicked(4,3);
        board43.requestFocusInWindow();
    }//GEN-LAST:event_board43MouseClicked

    private void board45MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_board45MouseClicked
        printClicked(4,5);
        board45.requestFocusInWindow();
    }//GEN-LAST:event_board45MouseClicked

    private void board46MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_board46MouseClicked
        printClicked(4,6);
        board46.requestFocusInWindow();
    }//GEN-LAST:event_board46MouseClicked

    private void board47MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_board47MouseClicked
        printClicked(4,7);
        board47.requestFocusInWindow();
    }//GEN-LAST:event_board47MouseClicked

    private void board48MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_board48MouseClicked
        printClicked(4,8);
        board48.requestFocusInWindow();
    }//GEN-LAST:event_board48MouseClicked

    private void board50MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_board50MouseClicked
        printClicked(5,0);
        board50.requestFocusInWindow();
    }//GEN-LAST:event_board50MouseClicked

    private void board53MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_board53MouseClicked
        printClicked(5,3);
        board53.requestFocusInWindow();
    }//GEN-LAST:event_board53MouseClicked

    private void board55MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_board55MouseClicked
        printClicked(5,5);
        board55.requestFocusInWindow();
    }//GEN-LAST:event_board55MouseClicked

    private void board57MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_board57MouseClicked
        printClicked(5,7);
        board57.requestFocusInWindow();
    }//GEN-LAST:event_board57MouseClicked

    private void board60MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_board60MouseClicked
        printClicked(6,0);
        board60.requestFocusInWindow();
    }//GEN-LAST:event_board60MouseClicked

    private void board63MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_board63MouseClicked
        printClicked(6,3);
        board63.requestFocusInWindow();
    }//GEN-LAST:event_board63MouseClicked

    private void board64MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_board64MouseClicked
        printClicked(6,4);
        board64.requestFocusInWindow();
    }//GEN-LAST:event_board64MouseClicked

    private void board65MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_board65MouseClicked
        printClicked(6,5);
        board65.requestFocusInWindow();
    }//GEN-LAST:event_board65MouseClicked

    private void board66MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_board66MouseClicked
        printClicked(6, 6);
        board66.requestFocusInWindow();
    }//GEN-LAST:event_board66MouseClicked

    private void board68MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_board68MouseClicked
        printClicked(6,8);
        board68.requestFocusInWindow();
    }//GEN-LAST:event_board68MouseClicked

    private void board70MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_board70MouseClicked
        printClicked(7, 0);
        board70.requestFocusInWindow();
    }//GEN-LAST:event_board70MouseClicked

    private void board71MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_board71MouseClicked
        printClicked(7, 1);
        board71.requestFocusInWindow();
    }//GEN-LAST:event_board71MouseClicked

    private void board73MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_board73MouseClicked
        printClicked(7, 3);
        board73.requestFocusInWindow();
    }//GEN-LAST:event_board73MouseClicked

    private void board74MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_board74MouseClicked
        printClicked(7, 4);
        board74.requestFocusInWindow();
    }//GEN-LAST:event_board74MouseClicked

    private void board75MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_board75MouseClicked
        printClicked(7, 5);
        board75.requestFocusInWindow();
    }//GEN-LAST:event_board75MouseClicked

    private void board76MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_board76MouseClicked
        printClicked(7, 6);
        board76.requestFocusInWindow();
    }//GEN-LAST:event_board76MouseClicked

    private void board77MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_board77MouseClicked
        printClicked(7, 7);
        board77.requestFocusInWindow();
    }//GEN-LAST:event_board77MouseClicked

    private void board78MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_board78MouseClicked
        printClicked(7, 8);
        board78.requestFocusInWindow();
    }//GEN-LAST:event_board78MouseClicked

    private void board81MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_board81MouseClicked
        printClicked(8, 1);
        board81.requestFocusInWindow();
    }//GEN-LAST:event_board81MouseClicked

    private void board82MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_board82MouseClicked
        printClicked(8, 2);
        board82.requestFocusInWindow();
    }//GEN-LAST:event_board82MouseClicked

    private void board84MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_board84MouseClicked
        printClicked(8, 4);
        board84.requestFocusInWindow();
    }//GEN-LAST:event_board84MouseClicked

    private void board86MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_board86MouseClicked
        printClicked(8, 6);
        board86.requestFocusInWindow();
    }//GEN-LAST:event_board86MouseClicked

    private void board87MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_board87MouseClicked
        printClicked(8, 7);
        board87.requestFocusInWindow();
    }//GEN-LAST:event_board87MouseClicked
    
    //===============END OF MOUSE CLICKED METHODS===================
    
    
    /*
    Methods that run when a key is pressed after clicking a label
    Checks for the valid inputs (1-9) and sets the text of the label to said input
    If invalid, a label prints an error message and allows for retry
    */
    private void board01KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_board01KeyPressed
        System.out.println("Key pressed on board[0][1]");
        if (evt.getKeyCode() >= 49 && evt.getKeyCode() <= 57) { //Key code for 1-9 on keyboard is 49-57 (Cannot test numberpad) (i dont have one !!!)
            switch (evt.getKeyCode()) {
                case 49 : //49 == 1
                    board01.setText("1");
                    sudokuBool[0][1] = false;
                    break;
                case 50 : //50 == 2
                    board01.setText("2");
                    sudokuBool[0][1] = false;
                    break;
                case 51 : //51 == 1
                    board01.setText("3");
                    sudokuBool[0][1] = true;
                    break;
                case 52 : //52 == 1
                    board01.setText("4");
                    sudokuBool[0][1] = false;
                    break;
                case 53 : //53 == 1
                    board01.setText("5");
                    sudokuBool[0][1] = false;
                    break;
                case 54 : //54 == 1
                    board01.setText("6");
                    sudokuBool[0][1] = false;
                    break;
                case 55 : //55 == 1
                    board01.setText("7");
                    sudokuBool[0][1] = false;
                    break;
                case 56 : //56 == 1
                    board01.setText("8");
                    sudokuBool[0][1] = false;
                    break;
                case 57 : //57 == 1
                    board01.setText("9");
                    sudokuBool[0][1] = false;
                    break;

                default : System.out.println("Invalid number (somehow), try again");
            }
            invalidInputLabel.setText("");
            
        }
        else {
            invalidInputLabel.setText("Invalid input. Try again");
        }
    }//GEN-LAST:event_board01KeyPressed

    private void board02KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_board02KeyPressed
        System.out.println("Key pressed on board[0][2]");
        if (evt.getKeyCode() >= 49 && evt.getKeyCode() <= 57) { //Key code for 1-9 on keyboard is 49-57 (Cannot test numberpad) (i dont have one !!!)
            switch (evt.getKeyCode()) {
                case 49 : //49 == 1
                    board02.setText("1");
                    sudokuBool[0][2] = false;
                    break;
                case 50 : //50 == 2
                    board02.setText("2");
                    sudokuBool[0][2] = false;
                    break;
                case 51 : //51 == 1
                    board02.setText("3");
                    sudokuBool[0][2] = false;
                    break;
                case 52 : //52 == 1
                    board02.setText("4");
                    sudokuBool[0][2] = false;
                    break;
                case 53 : //53 == 1
                    board02.setText("5");
                    sudokuBool[0][2] = true;
                    break;
                case 54 : //54 == 1
                    board02.setText("6");
                    sudokuBool[0][2] = false;
                    break;
                case 55 : //55 == 1
                    board02.setText("7");
                    sudokuBool[0][2] = false;
                    break;
                case 56 : //56 == 1
                    board02.setText("8");
                    sudokuBool[0][2] = false;
                    break;
                case 57 : //57 == 1
                    board02.setText("9");
                    sudokuBool[0][2] = false;
                    break;

                default : System.out.println("Invalid number (somehow), try again");
            }
            invalidInputLabel.setText("");
            
        }
        else {
            invalidInputLabel.setText("Invalid input. Try again");
        }
    }//GEN-LAST:event_board02KeyPressed

    private void board04KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_board04KeyPressed
        System.out.println("Key pressed on board[0][4]");
        if (evt.getKeyCode() >= 49 && evt.getKeyCode() <= 57) { //Key code for 1-9 on keyboard is 49-57 (Cannot test numberpad) (i dont have one !!!)
            switch (evt.getKeyCode()) {
                case 49 : //49 == 1
                    board04.setText("1");
                    sudokuBool[0][4] = true;
                    break;
                case 50 : //50 == 2
                    board04.setText("2");
                    sudokuBool[0][4] = false;
                    break;
                case 51 : //51 == 1
                    board04.setText("3");
                    sudokuBool[0][4] = false;
                    break;
                case 52 : //52 == 1
                    board04.setText("4");
                    sudokuBool[0][4] = false;
                    break;
                case 53 : //53 == 1
                    board04.setText("5");
                    sudokuBool[0][4] = false;
                    break;
                case 54 : //54 == 1
                    board04.setText("6");
                    sudokuBool[0][4] = false;
                    break;
                case 55 : //55 == 1
                    board04.setText("7");
                    sudokuBool[0][4] = false;
                    break;
                case 56 : //56 == 1
                    board04.setText("8");
                    sudokuBool[0][4] = false;
                    break;
                case 57 : //57 == 1
                    board04.setText("9");
                    sudokuBool[0][4] = false;
                    break;


                default : System.out.println("Invalid number (somehow), try again");
            }
            invalidInputLabel.setText("");
            
        }
        else {
            invalidInputLabel.setText("Invalid input. Try again");
        }
    }//GEN-LAST:event_board04KeyPressed

    private void board06KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_board06KeyPressed
        System.out.println("Key pressed on board[0][6]");
        if (evt.getKeyCode() >= 49 && evt.getKeyCode() <= 57) { //Key code for 1-9 on keyboard is 49-57 (Cannot test numberpad) (i dont have one !!!)
            switch (evt.getKeyCode()) {
                case 49 : //49 == 1
                    board06.setText("1");
                    sudokuBool[0][6] = false;
                    break;
                case 50 : //50 == 2
                    board06.setText("2");
                    sudokuBool[0][6] = false;
                    break;
                case 51 : //51 == 1
                    board06.setText("3");
                    sudokuBool[0][6] = false;
                    break;
                case 52 : //52 == 1
                    board06.setText("4");
                    sudokuBool[0][6] = false;
                    break;
                case 53 : //53 == 1
                    board06.setText("5");
                    sudokuBool[0][6] = false;
                    break;
                case 54 : //54 == 1
                    board06.setText("6");
                    sudokuBool[0][6] = false;
                    break;
                case 55 : //55 == 1
                    board06.setText("7");
                    sudokuBool[0][6] = false;
                    break;
                case 56 : //56 == 1
                    board06.setText("8");
                    sudokuBool[0][6] = false;
                    break;
                case 57 : //57 == 1
                    board06.setText("9");
                    sudokuBool[0][6] = true;
                    break;

                default : System.out.println("Invalid number (somehow), try again");
            }
            invalidInputLabel.setText("");
            
        }
        else {
            invalidInputLabel.setText("Invalid input. Try again");
        }
    }//GEN-LAST:event_board06KeyPressed

    private void board07KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_board07KeyPressed
        System.out.println("Key pressed on board[6][0]");
        if (evt.getKeyCode() >= 49 && evt.getKeyCode() <= 57) { //Key code for 1-9 on keyboard is 49-57 (Cannot test numberpad) (i dont have one !!!)
            switch (evt.getKeyCode()) {
                case 49 : //49 == 1
                    board07.setText("1");
                    sudokuBool[0][7] = false;
                    break;
                case 50 : //50 == 2
                    board07.setText("2");
                    sudokuBool[0][7] = true;
                    break;
                case 51 : //51 == 1
                    board07.setText("3");
                    sudokuBool[0][7] = false;
                    break;
                case 52 : //52 == 1
                    board07.setText("4");
                    sudokuBool[0][7] = false;
                    break;
                case 53 : //53 == 1
                    board07.setText("5");
                    sudokuBool[0][7] = false;
                    break;
                case 54 : //54 == 1
                    board07.setText("6");
                    sudokuBool[0][7] = false;
                    break;
                case 55 : //55 == 1
                    board07.setText("7");
                    sudokuBool[0][7] = false;
                    break;
                case 56 : //56 == 1
                    board07.setText("8");
                    sudokuBool[0][7] = false;
                    break;
                case 57 : //57 == 1
                    board07.setText("9");
                    sudokuBool[0][7] = false;
                    break;

                default : System.out.println("Invalid number (somehow), try again");
            }
            invalidInputLabel.setText("");
            
        }
        else {
            invalidInputLabel.setText("Invalid input. Try again");
        }
    }//GEN-LAST:event_board07KeyPressed

    private void board10KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_board10KeyPressed
        System.out.println("Key pressed on board[1][0]");
        if (evt.getKeyCode() >= 49 && evt.getKeyCode() <= 57) { //Key code for 1-9 on keyboard is 49-57 (Cannot test numberpad) (i dont have one !!!)
            switch (evt.getKeyCode()) {
                case 49 : //49 == 1
                    board10.setText("1");
                    sudokuBool[1][0] = false;
                    break;
                case 50 : //50 == 2
                    board10.setText("2");
                    sudokuBool[1][0] = true;
                    break;
                case 51 : //51 == 1
                    board10.setText("3");
                    sudokuBool[1][0] = false;
                    break;
                case 52 : //52 == 1
                    board10.setText("4");
                    sudokuBool[1][0] = false;
                    break;
                case 53 : //53 == 1
                    board10.setText("5");
                    sudokuBool[1][0] = false;
                    break;
                case 54 : //54 == 1
                    board10.setText("6");
                    sudokuBool[1][0] = false;
                    break;
                case 55 : //55 == 1
                    board10.setText("7");
                    sudokuBool[1][0] = false;
                    break;
                case 56 : //56 == 1
                    board10.setText("8");
                    sudokuBool[1][0] = false;
                    break;
                case 57 : //57 == 1
                    board10.setText("9");
                    sudokuBool[1][0] = false;
                    break;


                default : System.out.println("Invalid number (somehow), try again");
            }
            invalidInputLabel.setText("");
            
        }
        else {
            invalidInputLabel.setText("Invalid input. Try again");
        }
    }//GEN-LAST:event_board10KeyPressed

    private void board11KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_board11KeyPressed
        System.out.println("Key pressed on board[1][1]");
        if (evt.getKeyCode() >= 49 && evt.getKeyCode() <= 57) { //Key code for 1-9 on keyboard is 49-57 (Cannot test numberpad) (i dont have one !!!)
            switch (evt.getKeyCode()) {
                case 49 : //49 == 1
                    board11.setText("1");
                    sudokuBool[1][1] = false;
                    break;
                case 50 : //50 == 2
                    board11.setText("2");
                    sudokuBool[1][1] = false;
                    break;
                case 51 : //51 == 1
                    board11.setText("3");
                    sudokuBool[1][1] = false;
                    break;
                case 52 : //52 == 1
                    board11.setText("4");
                    sudokuBool[1][1] = false;
                    break;
                case 53 : //53 == 1
                    board11.setText("5");
                    sudokuBool[1][1] = false;
                    break;
                case 54 : //54 == 1
                    board11.setText("6");
                    sudokuBool[1][1] = false;
                    break;
                case 55 : //55 == 1
                    board11.setText("7");
                    sudokuBool[1][1] = false;
                    break;
                case 56 : //56 == 1
                    board11.setText("8");
                    sudokuBool[1][1] = false;
                    break;
                case 57 : //57 == 1
                    board11.setText("9");
                    sudokuBool[1][1] = true;
                    break;

                default : System.out.println("Invalid number (somehow), try again");
            }
            invalidInputLabel.setText("");
            
        }
        else {
            invalidInputLabel.setText("Invalid input. Try again");
        }
    }//GEN-LAST:event_board11KeyPressed

    private void board12KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_board12KeyPressed
        System.out.println("Key pressed on board[1][2]");
        if (evt.getKeyCode() >= 49 && evt.getKeyCode() <= 57) { //Key code for 1-9 on keyboard is 49-57 (Cannot test numberpad) (i dont have one !!!)
            switch (evt.getKeyCode()) {
                case 49 : //49 == 1
                    board12.setText("1");
                    sudokuBool[1][2] = false;
                    break;
                case 50 : //50 == 2
                    board12.setText("2");
                    sudokuBool[1][2] = false;
                    break;
                case 51 : //51 == 1
                    board12.setText("3");
                    sudokuBool[1][2] = false;
                    break;
                case 52 : //52 == 1
                    board12.setText("4");
                    sudokuBool[1][2] = false;
                    break;
                case 53 : //53 == 1
                    board12.setText("5");
                    sudokuBool[1][2] = false;
                    break;
                case 54 : //54 == 1
                    board12.setText("6");
                    sudokuBool[1][2] = true;
                    break;
                case 55 : //55 == 1
                    board12.setText("7");
                    sudokuBool[1][2] = false;
                    break;
                case 56 : //56 == 1
                    board12.setText("8");
                    sudokuBool[1][2] = false;
                    break;
                case 57 : //57 == 1
                    board12.setText("9");
                    sudokuBool[1][2] = false;
                    break;


                default : System.out.println("Invalid number (somehow), try again");
            }
            invalidInputLabel.setText("");
            
        }
        else {
            invalidInputLabel.setText("Invalid input. Try again");
        }
    }//GEN-LAST:event_board12KeyPressed

    private void board13KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_board13KeyPressed
        System.out.println("Key pressed on board[1][3]");
        if (evt.getKeyCode() >= 49 && evt.getKeyCode() <= 57) { //Key code for 1-9 on keyboard is 49-57 (Cannot test numberpad) (i dont have one !!!)
            switch (evt.getKeyCode()) {
                case 49 : //49 == 1
                    board13.setText("1");
                    sudokuBool[1][3] = false;
                    break;
                case 50 : //50 == 2
                    board13.setText("2");
                    sudokuBool[1][3] = false;
                    break;
                case 51 : //51 == 1
                    board13.setText("3");
                    sudokuBool[1][3] = false;
                    break;
                case 52 : //52 == 1
                    board13.setText("4");
                    sudokuBool[1][3] = false;
                    break;
                case 53 : //53 == 1
                    board13.setText("5");
                    sudokuBool[1][3] = false;
                    break;
                case 54 : //54 == 1
                    board13.setText("6");
                    sudokuBool[1][3] = false;
                    break;
                case 55 : //55 == 1
                    board13.setText("7");
                    sudokuBool[1][3] = false;
                    break;
                case 56 : //56 == 1
                    board13.setText("8");
                    sudokuBool[1][3] = true;
                    break;
                case 57 : //57 == 1
                    board13.setText("9");
                    sudokuBool[1][3] = false;
                    break;

                default : System.out.println("Invalid number (somehow), try again");
            }
            invalidInputLabel.setText("");
            
        }
        else {
            invalidInputLabel.setText("Invalid input. Try again");
        }
    }//GEN-LAST:event_board13KeyPressed

    private void board14KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_board14KeyPressed
        System.out.println("Key pressed on board[1][4]");
        if (evt.getKeyCode() >= 49 && evt.getKeyCode() <= 57) { //Key code for 1-9 on keyboard is 49-57 (Cannot test numberpad) (i dont have one !!!)
            switch (evt.getKeyCode()) {
                case 49 : //49 == 1
                    board14.setText("1");
                    sudokuBool[1][4] = false;
                    break;
                case 50 : //50 == 2
                    board14.setText("2");
                    sudokuBool[1][4] = false;
                    break;
                case 51 : //51 == 1
                    board14.setText("3");
                    sudokuBool[1][4] = false;
                    break;
                case 52 : //52 == 1
                    board14.setText("4");
                    sudokuBool[1][4] = false;
                    break;
                case 53 : //53 == 1
                    board14.setText("5");
                    sudokuBool[1][4] = true;
                    break;
                case 54 : //54 == 1
                    board14.setText("6");
                    sudokuBool[1][4] = false;
                    break;
                case 55 : //55 == 1
                    board14.setText("7");
                    sudokuBool[1][4] = false;
                    break;
                case 56 : //56 == 1
                    board14.setText("8");
                    sudokuBool[1][4] = false;
                    break;
                case 57 : //57 == 1
                    board14.setText("9");
                    sudokuBool[1][4] = false;
                    break;

                default : System.out.println("Invalid number (somehow), try again");
            }
            invalidInputLabel.setText("");
            
        }
        else {
            invalidInputLabel.setText("Invalid input. Try again");
        }
    }//GEN-LAST:event_board14KeyPressed

    private void board15KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_board15KeyPressed
        System.out.println("Key pressed on board[1][5]");
        if (evt.getKeyCode() >= 49 && evt.getKeyCode() <= 57) { //Key code for 1-9 on keyboard is 49-57 (Cannot test numberpad) (i dont have one !!!)
            switch (evt.getKeyCode()) {
                case 49 : //49 == 1
                    board15.setText("1");
                    sudokuBool[1][5] = false;
                    break;
                case 50 : //50 == 2
                    board15.setText("2");
                    sudokuBool[1][5] = false;
                    break;
                case 51 : //51 == 1
                    board15.setText("3");
                    sudokuBool[1][5] = false;
                    break;
                case 52 : //52 == 1
                    board15.setText("4");
                    sudokuBool[1][5] = false;
                    break;
                case 53 : //53 == 1
                    board15.setText("5");
                    sudokuBool[1][5] = false;
                    break;
                case 54 : //54 == 1
                    board15.setText("6");
                    sudokuBool[1][5] = false;
                    break;
                case 55 : //55 == 1
                    board15.setText("7");
                    sudokuBool[1][5] = true;
                    break;
                case 56 : //56 == 1
                    board15.setText("8");
                    sudokuBool[1][5] = false;
                    break;
                case 57 : //57 == 1
                    board15.setText("9");
                    sudokuBool[1][5] = false;
                    break;

                default : System.out.println("Invalid number (somehow), try again");
            }
            invalidInputLabel.setText("");
            
        }
        else {
            invalidInputLabel.setText("Invalid input. Try again");
        }
    }//GEN-LAST:event_board15KeyPressed

    private void board17KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_board17KeyPressed
        System.out.println("Key pressed on board[1][7]");
        if (evt.getKeyCode() >= 49 && evt.getKeyCode() <= 57) { //Key code for 1-9 on keyboard is 49-57 (Cannot test numberpad) (i dont have one !!!)
            switch (evt.getKeyCode()) {
                case 49 : //49 == 1
                    board17.setText("1");
                    sudokuBool[1][7] = false;
                    break;
                case 50 : //50 == 2
                    board17.setText("2");
                    sudokuBool[1][7] = false;
                    break;
                case 51 : //51 == 1
                    board17.setText("3");
                    sudokuBool[1][7] = true;
                    break;
                case 52 : //52 == 1
                    board17.setText("4");
                    sudokuBool[1][7] = false;
                    break;
                case 53 : //53 == 1
                    board17.setText("5");
                    sudokuBool[1][7] = false;
                    break;
                case 54 : //54 == 1
                    board17.setText("6");
                    sudokuBool[1][7] = false;
                    break;
                case 55 : //55 == 1
                    board17.setText("7");
                    sudokuBool[1][7] = false;
                    break;
                case 56 : //56 == 1
                    board17.setText("8");
                    sudokuBool[1][7] = false;
                    break;
                case 57 : //57 == 1
                    board17.setText("9");
                    sudokuBool[1][7] = false;
                    break;

                default : System.out.println("Invalid number (somehow), try again");
            }
            invalidInputLabel.setText("");
            
        }
        else {
            invalidInputLabel.setText("Invalid input. Try again");
        }
    }//GEN-LAST:event_board17KeyPressed

    private void board18KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_board18KeyPressed
        System.out.println("Key pressed on board[1][8]");
        if (evt.getKeyCode() >= 49 && evt.getKeyCode() <= 57) { //Key code for 1-9 on keyboard is 49-57 (Cannot test numberpad) (i dont have one !!!)
            switch (evt.getKeyCode()) {
                case 49 : //49 == 1
                    board18.setText("1");
                    sudokuBool[1][8] = true;
                    break;
                case 50 : //50 == 2
                    board18.setText("2");
                    sudokuBool[1][8] = false;
                    break;
                case 51 : //51 == 1
                    board18.setText("3");
                    sudokuBool[1][8] = false;
                    break;
                case 52 : //52 == 1
                    board18.setText("4");
                    sudokuBool[1][8] = false;
                    break;
                case 53 : //53 == 1
                    board18.setText("5");
                    sudokuBool[1][8] = false;
                    break;
                case 54 : //54 == 1
                    board18.setText("6");
                    sudokuBool[1][8] = false;
                    break;
                case 55 : //55 == 1
                    board18.setText("7");
                    sudokuBool[1][8] = false;
                    break;
                case 56 : //56 == 1
                    board18.setText("8");
                    sudokuBool[1][8] = false;
                    break;
                case 57 : //57 == 1
                    board18.setText("9");
                    sudokuBool[1][8] = false;
                    break;



                default : System.out.println("Invalid number (somehow), try again");
            }
            invalidInputLabel.setText("");
            
        }
        else {
            invalidInputLabel.setText("Invalid input. Try again");
        }
    }//GEN-LAST:event_board18KeyPressed

    private void board20KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_board20KeyPressed
        System.out.println("Key pressed on board[2][0]");
        if (evt.getKeyCode() >= 49 && evt.getKeyCode() <= 57) { //Key code for 1-9 on keyboard is 49-57 (Cannot test numberpad) (i dont have one !!!)
            switch (evt.getKeyCode()) {
                case 49 : //49 == 1
                    board20.setText("1");
                    sudokuBool[2][0] = false;
                    break;
                case 50 : //50 == 2
                    board20.setText("2");
                    sudokuBool[2][0] = false;
                    break;
                case 51 : //51 == 1
                    board20.setText("3");
                    sudokuBool[2][0] = false;
                    break;
                case 52 : //52 == 1
                    board20.setText("4");
                    sudokuBool[2][0] = true;
                    break;
                case 53 : //53 == 1
                    board20.setText("5");
                    sudokuBool[2][0] = false;
                    break;
                case 54 : //54 == 1
                    board20.setText("6");
                    sudokuBool[2][0] = false;
                    break;
                case 55 : //55 == 1
                    board20.setText("7");
                    sudokuBool[2][0] = false;
                    break;
                case 56 : //56 == 1
                    board20.setText("8");
                    sudokuBool[2][0] = false;
                    break;
                case 57 : //57 == 1
                    board20.setText("9");
                    sudokuBool[2][0] = false;
                    break;


                default : System.out.println("Invalid number (somehow), try again");
            }
            invalidInputLabel.setText("");
            
        }
        else {
            invalidInputLabel.setText("Invalid input. Try again");
        }
    }//GEN-LAST:event_board20KeyPressed

    private void board22KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_board22KeyPressed
        System.out.println("Key pressed on board[2][2]");
        if (evt.getKeyCode() >= 49 && evt.getKeyCode() <= 57) { //Key code for 1-9 on keyboard is 49-57 (Cannot test numberpad) (i dont have one !!!)
            switch (evt.getKeyCode()) {
                case 49 : //49 == 1
                    board22.setText("1");
                    sudokuBool[2][2] = false;
                    break;
                case 50 : //50 == 2
                    board22.setText("2");
                    sudokuBool[2][2] = false;
                    break;
                case 51 : //51 == 1
                    board22.setText("3");
                    sudokuBool[2][2] = false;
                    break;
                case 52 : //52 == 1
                    board22.setText("4");
                    sudokuBool[2][2] = false;
                    break;
                case 53 : //53 == 1
                    board22.setText("5");
                    sudokuBool[2][2] = false;
                    break;
                case 54 : //54 == 1
                    board22.setText("6");
                    sudokuBool[2][2] = false;
                    break;
                case 55 : //55 == 1
                    board22.setText("7");
                    sudokuBool[2][2] = true;
                    break;
                case 56 : //56 == 1
                    board22.setText("8");
                    sudokuBool[2][2] = false;
                    break;
                case 57 : //57 == 1
                    board22.setText("9");
                    sudokuBool[2][2] = false;
                    break;


                default : System.out.println("Invalid number (somehow), try again");
            }
            invalidInputLabel.setText("");
            
        }
        else {
            invalidInputLabel.setText("Invalid input. Try again");
        }
    }//GEN-LAST:event_board22KeyPressed
//all i feel is pain and suffering just copypasting code...
    private void board23KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_board23KeyPressed
        System.out.println("Key pressed on board[2][3]");
        if (evt.getKeyCode() >= 49 && evt.getKeyCode() <= 57) { //Key code for 1-9 on keyboard is 49-57 (Cannot test numberpad) (i dont have one !!!)
            switch (evt.getKeyCode()) {
                case 49 : //49 == 1
                    board23.setText("1");
                    sudokuBool[2][3] = false;
                    break;
                case 50 : //50 == 2
                    board23.setText("2");
                    sudokuBool[2][3] = true;
                    break;
                case 51 : //51 == 1
                    board23.setText("3");
                    sudokuBool[2][3] = false;
                    break;
                case 52 : //52 == 1
                    board23.setText("4");
                    sudokuBool[2][3] = false;
                    break;
                case 53 : //53 == 1
                    board23.setText("5");
                    sudokuBool[2][3] = false;
                    break;
                case 54 : //54 == 1
                    board23.setText("6");
                    sudokuBool[2][3] = false;
                    break;
                case 55 : //55 == 1
                    board23.setText("7");
                    sudokuBool[2][3] = false;
                    break;
                case 56 : //56 == 1
                    board23.setText("8");
                    sudokuBool[2][3] = false;
                    break;
                case 57 : //57 == 1
                    board23.setText("9");
                    sudokuBool[2][3] = false;
                    break;


                default : System.out.println("Invalid number (somehow), try again");
            }
            invalidInputLabel.setText("");
            
        }
        else {
            invalidInputLabel.setText("Invalid input. Try again");
        }
    }//GEN-LAST:event_board23KeyPressed

    private void board24KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_board24KeyPressed
        System.out.println("Key pressed on board[2][4]");
        if (evt.getKeyCode() >= 49 && evt.getKeyCode() <= 57) { //Key code for 1-9 on keyboard is 49-57 (Cannot test numberpad) (i dont have one !!!)
            switch (evt.getKeyCode()) {
                case 49 : //49 == 1
                    board24.setText("1");
                    sudokuBool[2][4] = false;
                    break;
                case 50 : //50 == 2
                    board24.setText("2");
                    sudokuBool[2][4] = false;
                    break;
                case 51 : //51 == 1
                    board24.setText("3");
                    sudokuBool[2][4] = false;
                    break;
                case 52 : //52 == 1
                    board24.setText("4");
                    sudokuBool[2][4] = false;
                    break;
                case 53 : //53 == 1
                    board24.setText("5");
                    sudokuBool[2][4] = false;
                    break;
                case 54 : //54 == 1
                    board24.setText("6");
                    sudokuBool[2][4] = false;
                    break;
                case 55 : //55 == 1
                    board24.setText("7");
                    sudokuBool[2][4] = false;
                    break;
                case 56 : //56 == 1
                    board24.setText("8");
                    sudokuBool[2][4] = false;
                    break;
                case 57 : //57 == 1
                    board24.setText("9");
                    sudokuBool[2][4] = true;
                    break;

                default : System.out.println("Invalid number (somehow), try again");
            }
            invalidInputLabel.setText("");
            
        }
        else {
            invalidInputLabel.setText("Invalid input. Try again");
        }
    }//GEN-LAST:event_board24KeyPressed

    private void board25KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_board25KeyPressed
        System.out.println("Key pressed on board[2][5]");
        if (evt.getKeyCode() >= 49 && evt.getKeyCode() <= 57) { //Key code for 1-9 on keyboard is 49-57 (Cannot test numberpad) (i dont have one !!!)
            switch (evt.getKeyCode()) {
                case 49 : //49 == 1
                    board25.setText("1");
                    sudokuBool[2][5] = false;
                    break;
                case 50 : //50 == 2
                    board25.setText("2");
                    sudokuBool[2][5] = false;
                    break;
                case 51 : //51 == 1
                    board25.setText("3");
                    sudokuBool[2][5] = true;
                    break;
                case 52 : //52 == 1
                    board25.setText("4");
                    sudokuBool[2][5] = false;
                    break;
                case 53 : //53 == 1
                    board25.setText("5");
                    sudokuBool[2][5] = false;
                    break;
                case 54 : //54 == 1
                    board25.setText("6");
                    sudokuBool[2][5] = false;
                    break;
                case 55 : //55 == 1
                    board25.setText("7");
                    sudokuBool[2][5] = false;
                    break;
                case 56 : //56 == 1
                    board25.setText("8");
                    sudokuBool[2][5] = false;
                    break;
                case 57 : //57 == 1
                    board25.setText("9");
                    sudokuBool[2][5] = false;
                    break;

                default : System.out.println("Invalid number (somehow), try again");
            }
            invalidInputLabel.setText("");
            
        }
        else {
            invalidInputLabel.setText("Invalid input. Try again");
        }
    }//GEN-LAST:event_board25KeyPressed

    private void board28KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_board28KeyPressed
        System.out.println("Key pressed on board[2][8]");
        if (evt.getKeyCode() >= 49 && evt.getKeyCode() <= 57) { //Key code for 1-9 on keyboard is 49-57 (Cannot test numberpad) (i dont have one !!!)
            switch (evt.getKeyCode()) {
                case 49 : //49 == 1
                    board28.setText("1");
                    sudokuBool[2][8] = false;
                    break;
                case 50 : //50 == 2
                    board28.setText("2");
                    sudokuBool[2][8] = false;
                    break;
                case 51 : //51 == 1
                    board28.setText("3");
                    sudokuBool[2][8] = false;
                    break;
                case 52 : //52 == 1
                    board28.setText("4");
                    sudokuBool[2][8] = false;
                    break;
                case 53 : //53 == 1
                    board28.setText("5");
                    sudokuBool[2][8] = false;
                    break;
                case 54 : //54 == 1
                    board28.setText("6");
                    sudokuBool[2][8] = false;
                    break;
                case 55 : //55 == 1
                    board28.setText("7");
                    sudokuBool[2][8] = false;
                    break;
                case 56 : //56 == 1
                    board28.setText("8");
                    sudokuBool[2][8] = true;
                    break;
                case 57 : //57 == 1
                    board28.setText("9");
                    sudokuBool[2][8] = false;
                    break;

                default : System.out.println("Invalid number (somehow), try again");
            }
            invalidInputLabel.setText("");
            
        }
        else {
            invalidInputLabel.setText("Invalid input. Try again");
        }
    }//GEN-LAST:event_board28KeyPressed

    private void board31KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_board31KeyPressed
        System.out.println("Key pressed on board[3][1]");
        if (evt.getKeyCode() >= 49 && evt.getKeyCode() <= 57) { //Key code for 1-9 on keyboard is 49-57 (Cannot test numberpad) (i dont have one !!!)
            switch (evt.getKeyCode()) {
                case 49 : //49 == 1
                    board31.setText("1");
                    sudokuBool[3][1] = false;
                    break;
                case 50 : //50 == 2
                    board31.setText("2");
                    sudokuBool[3][1] = false;
                    break;
                case 51 : //51 == 1
                    board31.setText("3");
                    sudokuBool[3][1] = false;
                    break;
                case 52 : //52 == 1
                    board31.setText("4");
                    sudokuBool[3][1] = false;
                    break;
                case 53 : //53 == 1
                    board31.setText("5");
                    sudokuBool[3][1] = false;
                    break;
                case 54 : //54 == 1
                    board31.setText("6");
                    sudokuBool[3][1] = true;
                    break;
                case 55 : //55 == 1
                    board31.setText("7");
                    sudokuBool[3][1] = false;
                    break;
                case 56 : //56 == 1
                    board31.setText("8");
                    sudokuBool[3][1] = false;
                    break;
                case 57 : //57 == 1
                    board31.setText("9");
                    sudokuBool[3][1] = false;
                    break;
                default : System.out.println("Invalid number (somehow), try again");
            }
            invalidInputLabel.setText("");
            
        }
        else {
            invalidInputLabel.setText("Invalid input. Try again");
        }
    }//GEN-LAST:event_board31KeyPressed

    private void board33KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_board33KeyPressed
        System.out.println("Key pressed on board[3][3]");
        if (evt.getKeyCode() >= 49 && evt.getKeyCode() <= 57) { //Key code for 1-9 on keyboard is 49-57 (Cannot test numberpad) (i dont have one !!!)
            switch (evt.getKeyCode()) {
                case 49 : //49 == 1
                    board33.setText("1");
                    sudokuBool[3][3] = true;
                    break;
                case 50 : //50 == 2
                    board33.setText("2");
                    sudokuBool[3][3] = false;
                    break;
                case 51 : //51 == 1
                    board33.setText("3");
                    sudokuBool[3][3] = false;
                    break;
                case 52 : //52 == 1
                    board33.setText("4");
                    sudokuBool[3][3] = false;
                    break;
                case 53 : //53 == 1
                    board33.setText("5");
                    sudokuBool[3][3] = false;
                    break;
                case 54 : //54 == 1
                    board33.setText("6");
                    sudokuBool[3][3] = false;
                    break;
                case 55 : //55 == 1
                    board33.setText("7");
                    sudokuBool[3][3] = false;
                    break;
                case 56 : //56 == 1
                    board33.setText("8");
                    sudokuBool[3][3] = false;
                    break;
                case 57 : //57 == 1
                    board33.setText("9");
                    sudokuBool[3][3] = false;
                    break;
                default : System.out.println("Invalid number (somehow), try again");
            }
            invalidInputLabel.setText("");
            
        }
        else {
            invalidInputLabel.setText("Invalid input. Try again");
        }
    }//GEN-LAST:event_board33KeyPressed

    private void board35KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_board35KeyPressed
        System.out.println("Key pressed on board[3][5]");
        if (evt.getKeyCode() >= 49 && evt.getKeyCode() <= 57) { //Key code for 1-9 on keyboard is 49-57 (Cannot test numberpad) (i dont have one !!!)
            switch (evt.getKeyCode()) {
                case 49 : //49 == 1
                    board35.setText("1");
                    sudokuBool[3][5] = false;
                    break;
                case 50 : //50 == 2
                    board35.setText("2");
                    sudokuBool[3][5] = false;
                    break;
                case 51 : //51 == 1
                    board35.setText("3");
                    sudokuBool[3][5] = false;
                    break;
                case 52 : //52 == 1
                    board35.setText("4");
                    sudokuBool[3][5] = true;
                    break;
                case 53 : //53 == 1
                    board35.setText("5");
                    sudokuBool[3][5] = false;
                    break;
                case 54 : //54 == 1
                    board35.setText("6");
                    sudokuBool[3][5] = false;
                    break;
                case 55 : //55 == 1
                    board35.setText("7");
                    sudokuBool[3][5] = false;
                    break;
                case 56 : //56 == 1
                    board35.setText("8");
                    sudokuBool[3][5] = false;
                    break;
                case 57 : //57 == 1
                    board35.setText("9");
                    sudokuBool[3][5] = false;
                    break;

                default : System.out.println("Invalid number (somehow), try again");
            }
            invalidInputLabel.setText("");
            
        }
        else {
            invalidInputLabel.setText("Invalid input. Try again");
        }
    }//GEN-LAST:event_board35KeyPressed

    private void board38KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_board38KeyPressed
        System.out.println("Key pressed on board[3][8]");
        if (evt.getKeyCode() >= 49 && evt.getKeyCode() <= 57) { //Key code for 1-9 on keyboard is 49-57 (Cannot test numberpad) (i dont have one !!!)
            switch (evt.getKeyCode()) {
                case 49 : //49 == 1
                    board38.setText("1");
                    sudokuBool[3][8] = false;
                    break;
                case 50 : //50 == 2
                    board38.setText("2");
                    sudokuBool[3][8] = true;
                    break;
                case 51 : //51 == 1
                    board38.setText("3");
                    sudokuBool[3][8] = false;
                    break;
                case 52 : //52 == 1
                    board38.setText("4");
                    sudokuBool[3][8] = false;
                    break;
                case 53 : //53 == 1
                    board38.setText("5");
                    sudokuBool[3][8] = false;
                    break;
                case 54 : //54 == 1
                    board38.setText("6");
                    sudokuBool[3][8] = false;
                    break;
                case 55 : //55 == 1
                    board38.setText("7");
                    sudokuBool[3][8] = false;
                    break;
                case 56 : //56 == 1
                    board38.setText("8");
                    sudokuBool[3][8] = false;
                    break;
                case 57 : //57 == 1
                    board38.setText("9");
                    sudokuBool[3][8] = false;
                    break;

                default : System.out.println("Invalid number (somehow), try again");
            }
            invalidInputLabel.setText("");
            
        }
        else {
            invalidInputLabel.setText("Invalid input. Try again");
        }
    }//GEN-LAST:event_board38KeyPressed

    private void board40KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_board40KeyPressed
        System.out.println("Key pressed on board[4][0]");
        if (evt.getKeyCode() >= 49 && evt.getKeyCode() <= 57) { //Key code for 1-9 on keyboard is 49-57 (Cannot test numberpad) (i dont have one !!!)
            switch (evt.getKeyCode()) {
                case 49 : //49 == 1
                    board40.setText("1");
                    sudokuBool[4][0] = true;
                    break;
                case 50 : //50 == 2
                    board40.setText("2");
                    sudokuBool[4][0] = false;
                    break;
                case 51 : //51 == 1
                    board40.setText("3");
                    sudokuBool[4][0] = false;
                    break;
                case 52 : //52 == 1
                    board40.setText("4");
                    sudokuBool[4][0] = false;
                    break;
                case 53 : //53 == 1
                    board40.setText("5");
                    sudokuBool[4][0] = false;
                    break;
                case 54 : //54 == 1
                    board40.setText("6");
                    sudokuBool[4][0] = false;
                    break;
                case 55 : //55 == 1
                    board40.setText("7");
                    sudokuBool[4][0] = false;
                    break;
                case 56 : //56 == 1
                    board40.setText("8");
                    sudokuBool[4][0] = false;
                    break;
                case 57 : //57 == 1
                    board40.setText("9");
                    sudokuBool[4][0] = false;
                    break;


                default : System.out.println("Invalid number (somehow), try again");
            }
            invalidInputLabel.setText("");
            
        }
        else {
            invalidInputLabel.setText("Invalid input. Try again");
        }
    }//GEN-LAST:event_board40KeyPressed

    private void board41KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_board41KeyPressed
        System.out.println("Key pressed on board[4][1]");
        if (evt.getKeyCode() >= 49 && evt.getKeyCode() <= 57) { //Key code for 1-9 on keyboard is 49-57 (Cannot test numberpad) (i dont have one !!!)
            switch (evt.getKeyCode()) {
                case 49 : //49 == 1
                    board41.setText("1");
                    sudokuBool[4][1] = false;
                    break;
                case 50 : //50 == 2
                    board41.setText("2");
                    sudokuBool[4][1] = true;
                    break;
                case 51 : //51 == 1
                    board41.setText("3");
                    sudokuBool[4][1] = false;
                    break;
                case 52 : //52 == 1
                    board41.setText("4");
                    sudokuBool[4][1] = false;
                    break;
                case 53 : //53 == 1
                    board41.setText("5");
                    sudokuBool[4][1] = false;
                    break;
                case 54 : //54 == 1
                    board41.setText("6");
                    sudokuBool[4][1] = false;
                    break;
                case 55 : //55 == 1
                    board41.setText("7");
                    sudokuBool[4][1] = false;
                    break;
                case 56 : //56 == 1
                    board41.setText("8");
                    sudokuBool[4][1] = false;
                    break;
                case 57 : //57 == 1
                    board41.setText("9");
                    sudokuBool[4][1] = false;
                    break;


                default : System.out.println("Invalid number (somehow), try again");
            }
            invalidInputLabel.setText("");
            
        }
        else {
            invalidInputLabel.setText("Invalid input. Try again");
        }
    }//GEN-LAST:event_board41KeyPressed

    private void board42KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_board42KeyPressed
        System.out.println("Key pressed on board[4][2]");
        if (evt.getKeyCode() >= 49 && evt.getKeyCode() <= 57) { //Key code for 1-9 on keyboard is 49-57 (Cannot test numberpad) (i dont have one !!!)
            switch (evt.getKeyCode()) {
                case 49 : //49 == 1
                    board42.setText("1");
                    sudokuBool[4][2] = false;
                    break;
                case 50 : //50 == 2
                    board42.setText("2");
                    sudokuBool[4][2] = false;
                    break;
                case 51 : //51 == 1
                    board42.setText("3");
                    sudokuBool[4][2] = true;
                    break;
                case 52 : //52 == 1
                    board42.setText("4");
                    sudokuBool[4][2] = false;
                    break;
                case 53 : //53 == 1
                    board42.setText("5");
                    sudokuBool[4][2] = false;
                    break;
                case 54 : //54 == 1
                    board42.setText("6");
                    sudokuBool[4][2] = false;
                    break;
                case 55 : //55 == 1
                    board42.setText("7");
                    sudokuBool[4][2] = false;
                    break;
                case 56 : //56 == 1
                    board42.setText("8");
                    sudokuBool[4][2] = false;
                    break;
                case 57 : //57 == 1
                    board42.setText("9");
                    sudokuBool[4][2] = false;
                    break;


                default : System.out.println("Invalid number (somehow), try again");
            }
            invalidInputLabel.setText("");
            
        }
        else {
            invalidInputLabel.setText("Invalid input. Try again");
        }
    }//GEN-LAST:event_board42KeyPressed

    private void board43KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_board43KeyPressed
        System.out.println("Key pressed on board[4][3]");
        if (evt.getKeyCode() >= 49 && evt.getKeyCode() <= 57) { //Key code for 1-9 on keyboard is 49-57 (Cannot test numberpad) (i dont have one !!!)
            switch (evt.getKeyCode()) {
                case 49 : //49 == 1
                    board43.setText("1");
                    sudokuBool[4][3] = false;
                    break;
                case 50 : //50 == 2
                    board43.setText("2");
                    sudokuBool[4][3] = false;
                    break;
                case 51 : //51 == 1
                    board43.setText("3");
                    sudokuBool[4][3] = false;
                    break;
                case 52 : //52 == 1
                    board43.setText("4");
                    sudokuBool[4][3] = false;
                    break;
                case 53 : //53 == 1
                    board43.setText("5");
                    sudokuBool[4][3] = false;
                    break;
                case 54 : //54 == 1
                    board43.setText("6");
                    sudokuBool[4][3] = true;
                    break;
                case 55 : //55 == 1
                    board43.setText("7");
                    sudokuBool[4][3] = false;
                    break;
                case 56 : //56 == 1
                    board43.setText("8");
                    sudokuBool[4][3] = false;
                    break;
                case 57 : //57 == 1
                    board43.setText("9");
                    sudokuBool[4][3] = false;
                    break;

                default : System.out.println("Invalid number (somehow), try again");
            }
            invalidInputLabel.setText("");
            
        }
        else {
            invalidInputLabel.setText("Invalid input. Try again");
        }
    }//GEN-LAST:event_board43KeyPressed

    private void board45KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_board45KeyPressed
        System.out.println("Key pressed on board[4][5]");
        if (evt.getKeyCode() >= 49 && evt.getKeyCode() <= 57) { //Key code for 1-9 on keyboard is 49-57 (Cannot test numberpad) (i dont have one !!!)
            switch (evt.getKeyCode()) {
                case 49 : 
                    board45.setText("1");
                    sudokuBool[4][5] = false;
                    break;
                case 50 : 
                    board45.setText("2");
                    sudokuBool[4][5] = false;
                    break;
                case 51 : 
                    board45.setText("3");
                    sudokuBool[4][5] = false;
                    break;
                case 52 : 
                    board45.setText("4");
                    sudokuBool[4][5] = false;
                    break;
                case 53 : 
                    board45.setText("5");
                    sudokuBool[4][5] = false;
                    break;
                case 54 : 
                    board45.setText("6");
                    sudokuBool[4][5] = false;
                    break;
                case 55 : 
                    board45.setText("7");
                    sudokuBool[4][5] = false;
                    break;
                case 56 : 
                    board45.setText("8");
                    sudokuBool[4][5] = true;
                    break;
                case 57 : 
                    board45.setText("9");
                    sudokuBool[4][5] = false;
                    break;

                default : System.out.println("Invalid number (somehow), try again");
            }
            invalidInputLabel.setText("");
            
        }
        else {
            invalidInputLabel.setText("Invalid input. Try again");
        }
    }//GEN-LAST:event_board45KeyPressed

    private void board46KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_board46KeyPressed
        System.out.println("Key pressed on board[4][6]");
        if (evt.getKeyCode() >= 49 && evt.getKeyCode() <= 57) { //Key code for 1-9 on keyboard is 49-57 (Cannot test numberpad) (i dont have one !!!)
            switch (evt.getKeyCode()) {
                case 49 : 
                    board46.setText("1");
                    sudokuBool[4][6] = false;
                    break;
                case 50 :
                    board46.setText("2");
                    sudokuBool[4][6] = false;
                    break;
                case 51 : 
                    board46.setText("3");
                    sudokuBool[4][6] = false;
                    break;
                case 52 : 
                    board46.setText("4");
                    sudokuBool[4][6] = false;
                    break;
                case 53 : 
                    board46.setText("5");
                    sudokuBool[4][6] = true;
                    break;
                case 54 :
                    board46.setText("6");
                    sudokuBool[4][6] = false;
                    break;
                case 55 : 
                    board46.setText("7");
                    sudokuBool[4][6] = false;
                    break;
                case 56 : 
                    board46.setText("8");
                    sudokuBool[4][6] = false;
                    break;
                case 57 : 
                    board46.setText("9");
                    sudokuBool[4][6] = false;
                    break;

                default : System.out.println("Invalid number (somehow), try again");
            }
            invalidInputLabel.setText("");
            
        }
        else {
            invalidInputLabel.setText("Invalid input. Try again");
        }
    }//GEN-LAST:event_board46KeyPressed

    private void board47KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_board47KeyPressed
        System.out.println("Key pressed on board[4][7]");
        if (evt.getKeyCode() >= 49 && evt.getKeyCode() <= 57) { //Key code for 1-9 on keyboard is 49-57 (Cannot test numberpad) (i dont have one !!!)
            switch (evt.getKeyCode()) {
                case 49 : 
                    board47.setText("1");
                    sudokuBool[4][7] = false;
                    break;
                case 50 : 
                    board47.setText("2");
                    sudokuBool[4][7] = false;
                    break;
                case 51 : 
                    board47.setText("3");
                    sudokuBool[4][7] = false;
                    break;
                case 52 : 
                    board47.setText("4");
                    sudokuBool[4][7] = true;
                    break;
                case 53 : 
                    board47.setText("5");
                    sudokuBool[4][7] = false;
                    break;
                case 54 : 
                    board47.setText("6");
                    sudokuBool[4][7] = false;
                    break;
                case 55 : 
                    board47.setText("7");
                    sudokuBool[4][7] = false;
                    break;
                case 56 : 
                    board47.setText("8");
                    sudokuBool[4][7] = false;
                    break;
                case 57 : 
                    board47.setText("9");
                    sudokuBool[4][7] = false;
                    break;

                default : System.out.println("Invalid number (somehow), try again");
            }
            invalidInputLabel.setText("");
            
        }
        else {
            invalidInputLabel.setText("Invalid input. Try again");
        }
    }//GEN-LAST:event_board47KeyPressed

    private void board48KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_board48KeyPressed
        System.out.println("Key pressed on board[4][8]");
        if (evt.getKeyCode() >= 49 && evt.getKeyCode() <= 57) { //Key code for 1-9 on keyboard is 49-57 (Cannot test numberpad) (i dont have one !!!)
            switch (evt.getKeyCode()) {
                case 49 : 
                    board48.setText("1");
                    sudokuBool[4][8] = false;
                    break;
                case 50 : 
                    board48.setText("2");
                    sudokuBool[4][8] = false;
                    break;
                case 51 : 
                    board48.setText("3");
                    sudokuBool[4][8] = false;
                    break;
                case 52 : 
                    board48.setText("4");
                    sudokuBool[4][8] = false;
                    break;
                case 53 : 
                    board48.setText("5");
                    sudokuBool[4][8] = false;
                    break;
                case 54 : 
                    board48.setText("6");
                    sudokuBool[4][8] = false;
                    break;
                case 55 : 
                    board48.setText("7");
                    sudokuBool[4][8] = false;
                    break;
                case 56 : 
                    board48.setText("8");
                    sudokuBool[4][8] = false;
                    break;
                case 57 : 
                    board48.setText("9");
                    sudokuBool[4][8] = true;
                    break;

                default : System.out.println("Invalid number (somehow), try again");
            }
            invalidInputLabel.setText("");
            
        }
        else {
            invalidInputLabel.setText("Invalid input. Try again");
        }
    }//GEN-LAST:event_board48KeyPressed

    private void board50KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_board50KeyPressed
        System.out.println("Key pressed on board[5][0]");
        if (evt.getKeyCode() >= 49 && evt.getKeyCode() <= 57) { //Key code for 1-9 on keyboard is 49-57 (Cannot test numberpad) (i dont have one !!!)
            switch (evt.getKeyCode()) {
                case 49 : 
                    board50.setText("1");
                    sudokuBool[5][0] = false;
                    break;
                case 50 : 
                    board50.setText("2");
                    sudokuBool[5][0] = false;
                    break;
                case 51 : 
                    board50.setText("3");
                    sudokuBool[5][0] = false;
                    break;
                case 52 : 
                    board50.setText("4");
                    sudokuBool[5][0] = false;
                    break;
                case 53 : 
                    board50.setText("5");
                    sudokuBool[5][0] = false;
                    break;
                case 54 : 
                    board50.setText("6");
                    sudokuBool[5][0] = false;
                    break;
                case 55 : 
                    board50.setText("7");
                    sudokuBool[5][0] = true;
                    break;
                case 56 : 
                    board50.setText("8");
                    sudokuBool[5][0] = false;
                    break;
                case 57 : 
                    board50.setText("9");
                    sudokuBool[5][0] = false;
                    break;

                default : System.out.println("Invalid number (somehow), try again");
            }
            invalidInputLabel.setText("");
            
        }
        else {
            invalidInputLabel.setText("Invalid input. Try again");
        }
    }//GEN-LAST:event_board50KeyPressed

    private void board53KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_board53KeyPressed
        System.out.println("Key pressed on board[5][3]");
        if (evt.getKeyCode() >= 49 && evt.getKeyCode() <= 57) { //Key code for 1-9 on keyboard is 49-57 (Cannot test numberpad) (i dont have one !!!)
            switch (evt.getKeyCode()) {
                case 49 : 
                    board53.setText("1");
                    sudokuBool[5][3] = false;
                    break;
                case 50 : 
                    board53.setText("2");	
                    sudokuBool[5][3] = false;
                    break;
                case 51 : 
                    board53.setText("3");
                    sudokuBool[5][3] = false;
                    break;
                case 52 : 
                    board53.setText("4");
                    sudokuBool[5][3] = false;
                    break;
                case 53 : 
                    board53.setText("5");
                    sudokuBool[5][3] = true;
                    break;
                case 54 : 
                    board53.setText("6");
                    sudokuBool[5][3] = false;
                    break;
                case 55 : 
                    board53.setText("7");
                    sudokuBool[5][3] = false;
                    break;
                case 56 : 
                    board53.setText("8");
                    sudokuBool[5][3] = false;
                    break;
                case 57 : 
                    board53.setText("9");
                    sudokuBool[5][3] = false;
                    break;

                default : System.out.println("Invalid number (somehow), try again");
            }
            invalidInputLabel.setText("");
            
        }
        else {
            invalidInputLabel.setText("Invalid input. Try again");
        }
    }//GEN-LAST:event_board53KeyPressed

    private void board55KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_board55KeyPressed
        System.out.println("Key pressed on board[5][5]");
        if (evt.getKeyCode() >= 49 && evt.getKeyCode() <= 57) { //Key code for 1-9 on keyboard is 49-57 (Cannot test numberpad) (i dont have one !!!)
            switch (evt.getKeyCode()) {
                case 49 : //49 == 1
                    board55.setText("1");
                    sudokuBool[5][5] = false;
                    break;
                case 50 : //50 == 2
                    board55.setText("2");	
                    sudokuBool[5][5] = false;
                    break;
                case 51 : //51 == 1
                    board55.setText("3");
                    sudokuBool[5][5] = false;
                    break;
                case 52 : //52 == 1
                    board55.setText("4");
                    sudokuBool[5][5] = false;
                    break;
                case 53 : //53 == 1
                    board55.setText("5");
                    sudokuBool[5][5] = false;
                    break;
                case 54 : //54 == 1
                    board55.setText("6");
                    sudokuBool[5][5] = false;
                    break;
                case 55 : //55 == 1
                    board55.setText("7");
                    sudokuBool[5][5] = false;
                    break;
                case 56 : //56 == 1
                    board55.setText("8");
                    sudokuBool[5][5] = false;
                    break;
                case 57 : //57 == 1
                    board55.setText("9");
                    sudokuBool[5][5] = true;
                    break;

                default : System.out.println("Invalid number (somehow), try again");
            }
            invalidInputLabel.setText("");
            
        }
        else {
            invalidInputLabel.setText("Invalid input. Try again");
        }
    }//GEN-LAST:event_board55KeyPressed

    private void board57KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_board57KeyPressed
        System.out.println("Key pressed on board[5][7]");
        if (evt.getKeyCode() >= 49 && evt.getKeyCode() <= 57) { //Key code for 1-9 on keyboard is 49-57 (Cannot test numberpad) (i dont have one !!!)
            switch (evt.getKeyCode()) {
                case 49 : //49 == 1
                    board57.setText("1");
                    sudokuBool[5][7] = false;
                    break;
                case 50 : //50 == 2
                    board57.setText("2");	
                    sudokuBool[5][7] = false;
                    break;
                case 51 : //51 == 1
                    board57.setText("3");
                    sudokuBool[5][7] = false;
                    break;
                case 52 : //52 == 1
                    board57.setText("4");
                    sudokuBool[5][7] = false;
                    break;
                case 53 : //53 == 1
                    board57.setText("5");
                    sudokuBool[5][7] = false;
                    break;
                case 54 : //54 == 1
                    board57.setText("6");
                    sudokuBool[5][7] = true;
                    break;
                case 55 : //57 == 1
                    board57.setText("7");
                    sudokuBool[5][7] = false;
                    break;
                case 56 : //56 == 1
                    board57.setText("8");
                    sudokuBool[5][7] = false;
                    break;
                case 57 : //57 == 1
                    board57.setText("9");
                    sudokuBool[5][7] = false;
                    break;

                default : System.out.println("Invalid number (somehow), try again");
            }
            invalidInputLabel.setText("");
            
        }
        else {
            invalidInputLabel.setText("Invalid input. Try again");
        }
    }//GEN-LAST:event_board57KeyPressed

    private void board60KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_board60KeyPressed
        System.out.println("Key pressed on board[6][0]");
        if (evt.getKeyCode() >= 49 && evt.getKeyCode() <= 57) { //Key code for 1-9 on keyboard is 49-57 (Cannot test numberpad) (i dont have one !!!)
            switch (evt.getKeyCode()) {
                case 49 : //49 == 1
                    board60.setText("1");
                    sudokuBool[6][0] = false;
                    break;
                case 50 : //50 == 2
                    board60.setText("2");	
                    sudokuBool[6][0] = false;
                    break;
                case 51 : //51 == 1
                    board60.setText("3");
                    sudokuBool[6][0] = false;
                    break;
                case 52 : //52 == 1
                    board60.setText("4");
                    sudokuBool[6][0] = false;
                    break;
                case 53 : //53 == 1
                    board60.setText("5");
                    sudokuBool[6][0] = false;
                    break;
                case 54 : //54 == 1
                    board60.setText("6");
                    sudokuBool[6][0] = true;
                    break;
                case 55 : //60 == 1
                    board60.setText("7");
                    sudokuBool[6][0] = false;
                    break;
                case 56 : //56 == 1
                    board60.setText("8");
                    sudokuBool[6][0] = false;
                    break;
                case 57: //60 == 1
                    board60.setText("9");
                    sudokuBool[6][0] = false;
                    break;

                default : System.out.println("Invalid number (somehow), try again");
            }
            invalidInputLabel.setText("");
            
        }
        else {
            invalidInputLabel.setText("Invalid input. Try again");
        }
    }//GEN-LAST:event_board60KeyPressed

    private void board63KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_board63KeyPressed
        System.out.println("Key pressed on board[6][3]");
        if (evt.getKeyCode() >= 49 && evt.getKeyCode() <= 57) { //Key code for 1-9 on keyboard is 49-57 (Cannot test numberpad) (i dont have one !!!)
            switch (evt.getKeyCode()) {
                case 49 : //49 == 1
                    board63.setText("1");
                    sudokuBool[6][3] = false;
                    break;
                case 50 : //50 == 2
                    board63.setText("2");	
                    sudokuBool[6][3] = false;
                    break;
                case 51 : //51 == 1
                    board63.setText("3");
                    sudokuBool[6][3] = false;
                    break;
                case 52 : //52 == 1
                    board63.setText("4");
                    sudokuBool[6][3] = false;
                    break;
                case 53 : //53 == 1
                    board63.setText("5");
                    sudokuBool[6][3] = false;
                    break;
                case 54 : //54 == 1
                    board63.setText("6");
                    sudokuBool[6][3] = false;
                    break;
                case 55 : //63 == 1
                    board63.setText("7");
                    sudokuBool[6][3] = true;
                    break;
                case 56 : //56 == 1
                    board63.setText("8");
                    sudokuBool[6][3] = false;
                    break;
                case 57: //57 == 1
                    board63.setText("9");
                    sudokuBool[6][3] = false;
                    break;

                default : System.out.println("Invalid number (somehow), try again");
            }
            invalidInputLabel.setText("");
            
        }
        else {
            invalidInputLabel.setText("Invalid input. Try again");
        }
    }//GEN-LAST:event_board63KeyPressed

    private void board64KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_board64KeyPressed
        System.out.println("Key pressed on board[6][4]");
        if (evt.getKeyCode() >= 49 && evt.getKeyCode() <= 57) { //Key code for 1-9 on keyboard is 49-57 (Cannot test numberpad) (i dont have one !!!)
            switch (evt.getKeyCode()) {
                case 49 : //49 == 1
                    board64.setText("1");
                    sudokuBool[6][4] = false;
                    break;
                case 50 : //50 == 2
                    board64.setText("2");	
                    sudokuBool[6][4] = false;
                    break;
                case 51 : //51 == 1
                    board64.setText("3");
                    sudokuBool[6][4] = false;
                    break;
                case 52 : //52 == 1
                    board64.setText("4");
                    sudokuBool[6][4] = false;
                    break;
                case 53 : //53 == 1
                    board64.setText("5");
                    sudokuBool[6][4] = false;
                    break;
                case 54 : //54 == 1
                    board64.setText("6");
                    sudokuBool[6][4] = false;
                    break;
                case 55 : //64 == 1
                    board64.setText("7");
                    sudokuBool[6][4] = false;
                    break;
                case 56 : //56 == 1
                    board64.setText("8");
                    sudokuBool[6][4] = true;
                    break;
                case 57: //57 == 1
                    board64.setText("9");
                    sudokuBool[6][4] = false;
                    break;

                default : System.out.println("Invalid number (somehow), try again");
            }
            invalidInputLabel.setText("");
            
        }
        else {
            invalidInputLabel.setText("Invalid input. Try again");
        }
    }//GEN-LAST:event_board64KeyPressed

    private void board65KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_board65KeyPressed
        System.out.println("Key pressed on board[6][5]");
        if (evt.getKeyCode() >= 49 && evt.getKeyCode() <= 57) { //Key code for 1-9 on keyboard is 49-57 (Cannot test numberpad) (i dont have one !!!)
            switch (evt.getKeyCode()) {
                case 49 : //49 == 1
                    board65.setText("1");
                    sudokuBool[6][5] = true;
                    break;
                case 50 : //50 == 2
                    board65.setText("2");	
                    sudokuBool[6][5] = false;
                    break;
                case 51 : //51 == 1
                    board65.setText("3");
                    sudokuBool[6][5] = false;
                    break;
                case 52 : //52 == 1
                    board65.setText("4");
                    sudokuBool[6][5] = false;
                    break;
                case 53 : //53 == 1
                    board65.setText("5");
                    sudokuBool[6][5] = false;
                    break;
                case 54 : //54 == 1
                    board65.setText("6");
                    sudokuBool[6][5] = false;
                    break;
                case 55 : //65 == 1
                    board65.setText("7");
                    sudokuBool[6][5] = false;
                    break;
                case 56 : //56 == 1
                    board65.setText("8");
                    sudokuBool[6][5] = false;
                    break;
                case 57: //57 == 1
                    board65.setText("9");
                    sudokuBool[6][5] = false;
                    break;

                default : System.out.println("Invalid number (somehow), try again");
            }
            invalidInputLabel.setText("");
            
        }
        else {
            invalidInputLabel.setText("Invalid input. Try again");
        }
    }//GEN-LAST:event_board65KeyPressed

    private void board66KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_board66KeyPressed
        System.out.println("Key pressed on board[6][6]");
        if (evt.getKeyCode() >= 49 && evt.getKeyCode() <= 57) { //Key code for 1-9 on keyboard is 49-57 (Cannot test numberpad) (i dont have one !!!)
            switch (evt.getKeyCode()) {
                case 49 : 
                    board66.setText("1");
                    sudokuBool[6][6] = false;
                    break;
                case 50 : 
                    board66.setText("2");	
                    sudokuBool[6][6] = false;
                    break;
                case 51 : 
                    board66.setText("3");
                    sudokuBool[6][6] = true;
                    break;
                case 52 : 
                    board66.setText("4");
                    sudokuBool[6][6] = false;
                    break;
                case 53 : 
                    board66.setText("5");
                    sudokuBool[6][6] = false;
                    break;
                case 54 : 
                    board66.setText("6");
                    sudokuBool[6][6] = false;
                    break;
                case 55 : 
                    board66.setText("7");
                    sudokuBool[6][6] = false;
                    break;
                case 56 : 
                    board66.setText("8");
                    sudokuBool[6][6] = false;
                    break;
                case 57: 
                    board66.setText("9");
                    sudokuBool[6][6] = false;
                    break;

                default : System.out.println("Invalid number (somehow), try again");
            }
            invalidInputLabel.setText("");
            
        }
        else {
            invalidInputLabel.setText("Invalid input. Try again");
        }
    }//GEN-LAST:event_board66KeyPressed

    private void board68KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_board68KeyPressed
        System.out.println("Key pressed on board[6][8]");
        if (evt.getKeyCode() >= 49 && evt.getKeyCode() <= 57) { //Key code for 1-9 on keyboard is 49-57 (Cannot test numberpad) (i dont have one !!!)
            switch (evt.getKeyCode()) {
                case 49 : 
                    board68.setText("1");
                    sudokuBool[6][8] = false;
                    break;
                case 50 : 
                    board68.setText("2");	
                    sudokuBool[6][8] = false;
                    break;
                case 51 : 
                    board68.setText("3");
                    sudokuBool[6][8] = false;
                    break;
                case 52 : 
                    board68.setText("4");
                    sudokuBool[6][8] = true;
                    break;
                case 53 : 
                    board68.setText("5");
                    sudokuBool[6][8] = false;
                    break;
                case 54 : 
                    board68.setText("6");
                    sudokuBool[6][8] = false;
                    break;
                case 55 : 
                    board68.setText("7");
                    sudokuBool[6][8] = false;
                    break;
                case 56 : 
                    board68.setText("8");
                    sudokuBool[6][8] = false;
                    break;
                case 57: 
                    board68.setText("9");
                    sudokuBool[6][8] = false;
                    break;

                default : System.out.println("Invalid number (somehow), try again");
            }
            invalidInputLabel.setText("");
            
        }
        else {
            invalidInputLabel.setText("Invalid input. Try again");
        }
    }//GEN-LAST:event_board68KeyPressed

    private void board70KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_board70KeyPressed
        System.out.println("Key pressed on board[7][0]");
        if (evt.getKeyCode() >= 49 && evt.getKeyCode() <= 57) { //Key code for 1-9 on keyboard is 49-57 (Cannot test numberpad) (i dont have one !!!)
            switch (evt.getKeyCode()) {
                case 49 : 
                    board70.setText("1");
                    sudokuBool[7][0] = false;
                    break;
                case 50 : 
                    board70.setText("2");	
                    sudokuBool[7][0] = false;
                    break;
                case 51 : 
                    board70.setText("3");
                    sudokuBool[7][0] = false;
                    break;
                case 52 : 
                    board70.setText("4");
                    sudokuBool[7][0] = false;
                    break;
                case 53 : 
                    board70.setText("5");
                    sudokuBool[7][0] = false;
                    break;
                case 54 : 
                    board70.setText("6");
                    sudokuBool[7][0] = false;
                    break;
                case 55 : 
                    board70.setText("7");
                    sudokuBool[7][0] = false;
                    break;
                case 56 : 
                    board70.setText("8");
                    sudokuBool[7][0] = false;
                    break;
                case 57: 
                    board70.setText("9");
                    sudokuBool[7][0] = true;
                    break;

                default : System.out.println("Invalid number (somehow), try again");
            }
            invalidInputLabel.setText("");
            
        }
        else {
            invalidInputLabel.setText("Invalid input. Try again");
        }
    }//GEN-LAST:event_board70KeyPressed

    private void board71KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_board71KeyPressed
        System.out.println("Key pressed on board[7][1]");
        if (evt.getKeyCode() >= 49 && evt.getKeyCode() <= 57) { //Key code for 1-9 on keyboard is 49-57 (Cannot test numberpad) (i dont have one !!!)
            switch (evt.getKeyCode()) {
                case 49 : 
                    board71.setText("1");
                    sudokuBool[7][1] = false;
                    break;
                case 50 : 
                    board71.setText("2");	
                    sudokuBool[7][1] = false;
                    break;
                case 51 : 
                    board71.setText("3");
                    sudokuBool[7][1] = false;
                    break;
                case 52 : 
                    board71.setText("4");
                    sudokuBool[7][1] = false;
                    break;
                case 53 : 
                    board71.setText("5");
                    sudokuBool[7][1] = false;
                    break;
                case 54 : 
                    board71.setText("6");
                    sudokuBool[7][1] = false;
                    break;
                case 55 : 
                    board71.setText("7");
                    sudokuBool[7][1] = false;
                    break;
                case 56 : 
                    board71.setText("8");
                    sudokuBool[7][1] = true;
                    break;
                case 57: 
                    board71.setText("9");
                    sudokuBool[7][1] = false;
                    break;

                default : System.out.println("Invalid number (somehow), try again");
            }
            invalidInputLabel.setText("");
            
        }
        else {
            invalidInputLabel.setText("Invalid input. Try again");
        }
    }//GEN-LAST:event_board71KeyPressed

    private void board73KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_board73KeyPressed
        System.out.println("Key pressed on board[7][3]");
        if (evt.getKeyCode() >= 49 && evt.getKeyCode() <= 57) { //Key code for 1-9 on keyboard is 49-57 (Cannot test numberpad) (i dont have one !!!)
            switch (evt.getKeyCode()) {
                case 49 : 
                    board73.setText("1");
                    sudokuBool[7][3] = false;
                    break;
                case 50 : 
                    board73.setText("2");	
                    sudokuBool[7][3] = false;
                    break;
                case 51 : 
                    board73.setText("3");
                    sudokuBool[7][3] = true;
                    break;
                case 52 : 
                    board73.setText("4");
                    sudokuBool[7][3] = false;
                    break;
                case 53 : 
                    board73.setText("5");
                    sudokuBool[7][3] = false;
                    break;
                case 54 : 
                    board73.setText("6");
                    sudokuBool[7][3] = false;
                    break;
                case 55 : 
                    board73.setText("7");
                    sudokuBool[7][3] = false;
                    break;
                case 56 : 
                    board73.setText("8");
                    sudokuBool[7][3] = false;
                    break;
                case 57: 
                    board73.setText("9");
                    sudokuBool[7][3] = false;
                    break;

                default : System.out.println("Invalid number (somehow), try again");
            }
            invalidInputLabel.setText("");
            
        }
        else {
            invalidInputLabel.setText("Invalid input. Try again");
        }
    }//GEN-LAST:event_board73KeyPressed

    private void board74KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_board74KeyPressed
        System.out.println("Key pressed on board[7][4]");
        if (evt.getKeyCode() >= 49 && evt.getKeyCode() <= 57) { //Key code for 1-9 on keyboard is 49-57 (Cannot test numberpad) (i dont have one !!!)
            switch (evt.getKeyCode()) {
                case 49 : 
                    board74.setText("1");
                    sudokuBool[7][4] = false;
                    break;
                case 50 : 
                    board74.setText("2");	
                    sudokuBool[7][4] = false;
                    break;
                case 51 : 
                    board74.setText("3");
                    sudokuBool[7][4] = false;
                    break;
                case 52 : 
                    board74.setText("4");
                    sudokuBool[7][4] = true;
                    break;
                case 53 : 
                    board74.setText("5");
                    sudokuBool[7][4] = false;
                    break;
                case 54 : 
                    board74.setText("6");
                    sudokuBool[7][4] = false;
                    break;
                case 55 : 
                    board74.setText("7");
                    sudokuBool[7][4] = false;
                    break;
                case 56 : 
                    board74.setText("8");
                    sudokuBool[7][4] = false;
                    break;
                case 57: 
                    board74.setText("9");
                    sudokuBool[7][4] = false;
                    break;

                default : System.out.println("Invalid number (somehow), try again");
            }
            invalidInputLabel.setText("");
            
        }
        else {
            invalidInputLabel.setText("Invalid input. Try again");
        }
    }//GEN-LAST:event_board74KeyPressed

    private void board75KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_board75KeyPressed
        System.out.println("Key pressed on board[7][5]");
        if (evt.getKeyCode() >= 49 && evt.getKeyCode() <= 57) { //Key code for 1-9 on keyboard is 49-57 (Cannot test numberpad) (i dont have one !!!)
            switch (evt.getKeyCode()) {
                case 49 : 
                    board75.setText("1");
                    sudokuBool[7][5] = false;
                    break;
                case 50 : 
                    board75.setText("2");	
                    sudokuBool[7][5] = false;
                    break;
                case 51 : 
                    board75.setText("3");
                    sudokuBool[7][5] = false;
                    break;
                case 52 : 
                    board75.setText("4");
                    sudokuBool[7][5] = false;
                    break;
                case 53 : 
                    board75.setText("5");
                    sudokuBool[7][5] = true;
                    break;
                case 54 : 
                    board75.setText("6");
                    sudokuBool[7][5] = false;
                    break;
                case 55 : 
                    board75.setText("7");
                    sudokuBool[7][5] = false;
                    break;
                case 56 : 
                    board75.setText("8");
                    sudokuBool[7][5] = false;
                    break;
                case 57: 
                    board75.setText("9");
                    sudokuBool[7][5] = false;
                    break;

                default : System.out.println("Invalid number (somehow), try again");
            }
            invalidInputLabel.setText("");
            
        }
        else {
            invalidInputLabel.setText("Invalid input. Try again");
        }
    }//GEN-LAST:event_board75KeyPressed

    private void board76KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_board76KeyPressed
        System.out.println("Key pressed on board[7][6]");
        if (evt.getKeyCode() >= 49 && evt.getKeyCode() <= 57) { //Key code for 1-9 on keyboard is 49-57 (Cannot test numberpad) (i dont have one !!!)
            switch (evt.getKeyCode()) {
                case 49 : 
                    board76.setText("1");
                    sudokuBool[7][6] = false;
                    break;
                case 50 : 
                    board76.setText("2");	
                    sudokuBool[7][6] = true;
                    break;
                case 51 : 
                    board76.setText("3");
                    sudokuBool[7][6] = false;
                    break;
                case 52 : 
                    board76.setText("4");
                    sudokuBool[7][6] = false;
                    break;
                case 53 : 
                    board76.setText("5");
                    sudokuBool[7][6] = false;
                    break;
                case 54 : 
                    board76.setText("6");
                    sudokuBool[7][6] = false;
                    break;
                case 55 : 
                    board76.setText("7");
                    sudokuBool[7][6] = false;
                    break;
                case 56 : 
                    board76.setText("8");
                    sudokuBool[7][6] = false;
                    break;
                case 57: 
                    board76.setText("9");
                    sudokuBool[7][6] = false;
                    break;

                default : System.out.println("Invalid number (somehow), try again");
            }
            invalidInputLabel.setText("");
            
        }
        else {
            invalidInputLabel.setText("Invalid input. Try again");
        }
    }//GEN-LAST:event_board76KeyPressed

    private void board77KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_board77KeyPressed
        System.out.println("Key pressed on board[7][7]");
        if (evt.getKeyCode() >= 49 && evt.getKeyCode() <= 57) { //Key code for 1-9 on keyboard is 49-57 (Cannot test numberpad) (i dont have one !!!)
            switch (evt.getKeyCode()) {
                case 49 : 
                    board77.setText("1");
                    sudokuBool[7][7] = false;
                    break;
                case 50 : 
                    board77.setText("2");	
                    sudokuBool[7][7] = false;
                    break;
                case 51 : 
                    board77.setText("3");
                    sudokuBool[7][7] = false;
                    break;
                case 52 : 
                    board77.setText("4");
                    sudokuBool[7][7] = false;
                    break;
                case 53 : 
                    board77.setText("5");
                    sudokuBool[7][7] = false;
                    break;
                case 54 : 
                    board77.setText("6");
                    sudokuBool[7][7] = false;
                    break;
                case 55 : 
                    board77.setText("7");
                    sudokuBool[7][7] = true;
                    break;
                case 56 : 
                    board77.setText("8");
                    sudokuBool[7][7] = false;
                    break;
                case 57: 
                    board77.setText("9");
                    sudokuBool[7][7] = false;
                    break;

                default : System.out.println("Invalid number (somehow), try again");
            }
            invalidInputLabel.setText("");
            
        }
        else {
            invalidInputLabel.setText("Invalid input. Try again");
        }
    }//GEN-LAST:event_board77KeyPressed

    private void board78KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_board78KeyPressed
        System.out.println("Key pressed on board[7][8]");
        if (evt.getKeyCode() >= 49 && evt.getKeyCode() <= 57) { //Key code for 1-9 on keyboard is 49-57 (Cannot test numberpad) (i dont have one !!!)
            switch (evt.getKeyCode()) {
                case 49 : 
                    board78.setText("1");
                    sudokuBool[7][8] = false;
                    break;
                case 50 : 
                    board78.setText("2");	
                    sudokuBool[7][8] = false;
                    break;
                case 51 : 
                    board78.setText("3");
                    sudokuBool[7][8] = false;
                    break;
                case 52 : 
                    board78.setText("4");
                    sudokuBool[7][8] = false;
                    break;
                case 53 : 
                    board78.setText("5");
                    sudokuBool[7][8] = false;
                    break;
                case 54 : 
                    board78.setText("6");
                    sudokuBool[7][8] = true;
                    break;
                case 55 : 
                    board78.setText("7");
                    sudokuBool[7][8] = false;
                    break;
                case 56 : 
                    board78.setText("8");
                    sudokuBool[7][8] = false;
                    break;
                case 57: 
                    board78.setText("9");
                    sudokuBool[7][8] = false;
                    break;

                default : System.out.println("Invalid number (somehow), try again");
            }
            invalidInputLabel.setText("");
            
        }
        else {
            invalidInputLabel.setText("Invalid input. Try again");
        }
    }//GEN-LAST:event_board78KeyPressed

    private void board81KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_board81KeyPressed
        System.out.println("Key pressed on board[8][1]");
        if (evt.getKeyCode() >= 49 && evt.getKeyCode() <= 57) { //Key code for 1-9 on keyboard is 49-57 (Cannot test numberpad) (i dont have one !!!)
            switch (evt.getKeyCode()) {
                case 49 : 
                    board81.setText("1");
                    sudokuBool[8][1] = false;
                    break;
                case 50 : 
                    board81.setText("2");	
                    sudokuBool[8][1] = false;
                    break;
                case 51 : 
                    board81.setText("3");
                    sudokuBool[8][1] = false;
                    break;
                case 52 : 
                    board81.setText("4");
                    sudokuBool[8][1] = false;
                    break;
                case 53 : 
                    board81.setText("5");
                    sudokuBool[8][1] = false;
                    break;
                case 54 : 
                    board81.setText("6");
                    sudokuBool[8][1] = false;
                    break;
                case 55 : 
                    board81.setText("7");
                    sudokuBool[8][1] = true;
                    break;
                case 56 : 
                    board81.setText("8");
                    sudokuBool[8][1] = false;
                    break;
                case 57: 
                    board81.setText("9");
                    sudokuBool[8][1] = false;
                    break;

                default : System.out.println("Invalid number (somehow), try again");
            }
            invalidInputLabel.setText("");
            
        }
        else {
            invalidInputLabel.setText("Invalid input. Try again");
        }
    }//GEN-LAST:event_board81KeyPressed

    private void board82KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_board82KeyPressed
        System.out.println("Key pressed on board[8][2]");
        if (evt.getKeyCode() >= 49 && evt.getKeyCode() <= 57) { //Key code for 1-9 on keyboard is 49-57 (Cannot test numberpad) (i dont have one !!!)
            switch (evt.getKeyCode()) {
                case 49 : 
                    board82.setText("1");
                    sudokuBool[8][2] = false;
                    break;
                case 50 : 
                    board82.setText("2");	
                    sudokuBool[8][2] = false;
                    break;
                case 51 : 
                    board82.setText("3");
                    sudokuBool[8][2] = false;
                    break;
                case 52 : 
                    board82.setText("4");
                    sudokuBool[8][2] = true;
                    break;
                case 53 : 
                    board82.setText("5");
                    sudokuBool[8][2] = false;
                    break;
                case 54 : 
                    board82.setText("6");
                    sudokuBool[8][2] = false;
                    break;
                case 55 : 
                    board82.setText("7");
                    sudokuBool[8][2] = false;
                    break;
                case 56 : 
                    board82.setText("8");
                    sudokuBool[8][2] = false;
                    break;
                case 57: 
                    board82.setText("9");
                    sudokuBool[8][2] = false;
                    break;

                default : System.out.println("Invalid number (somehow), try again");
            }
            invalidInputLabel.setText("");
            
        }
        else {
            invalidInputLabel.setText("Invalid input. Try again");
        }
    }//GEN-LAST:event_board82KeyPressed

    private void board84KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_board84KeyPressed
        System.out.println("Key pressed on board[8][4]");
        if (evt.getKeyCode() >= 49 && evt.getKeyCode() <= 57) { //Key code for 1-9 on keyboard is 49-57 (Cannot test numberpad) (i dont have one !!!)
            switch (evt.getKeyCode()) {
                case 49 : 
                    board84.setText("1");
                    sudokuBool[8][4] = false;
                    break;
                case 50 : 
                    board84.setText("2");	
                    sudokuBool[8][4] = false;
                    break;
                case 51 : 
                    board84.setText("3");
                    sudokuBool[8][4] = false;
                    break;
                case 52 : 
                    board84.setText("4");
                    sudokuBool[8][4] = false;
                    break;
                case 53 : 
                    board84.setText("5");
                    sudokuBool[8][4] = false;
                    break;
                case 54 : 
                    board84.setText("6");
                    sudokuBool[8][4] = true;
                    break;
                case 55 : 
                    board84.setText("7");
                    sudokuBool[8][4] = false;
                    break;
                case 56 : 
                    board84.setText("8");
                    sudokuBool[8][4] = false;
                    break;
                case 57: 
                    board84.setText("9");
                    sudokuBool[8][4] = false;
                    break;

                default : System.out.println("Invalid number (somehow), try again");
            }
            invalidInputLabel.setText("");
            
        }
        else {
            invalidInputLabel.setText("Invalid input. Try again");
        }
    }//GEN-LAST:event_board84KeyPressed

    private void board86KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_board86KeyPressed
        System.out.println("Key pressed on board[8][6]");
        if (evt.getKeyCode() >= 49 && evt.getKeyCode() <= 57) { //Key code for 1-9 on keyboard is 49-57 (Cannot test numberpad) (i dont have one !!!)
            switch (evt.getKeyCode()) {
                case 49 : 
                    board86.setText("1");
                    sudokuBool[8][6] = false;
                    break;
                case 50 : 
                    board86.setText("2");	
                    sudokuBool[8][6] = false;
                    break;
                case 51 : 
                    board86.setText("3");
                    sudokuBool[8][6] = false;
                    break;
                case 52 : 
                    board86.setText("4");
                    sudokuBool[8][6] = false;
                    break;
                case 53 : 
                    board86.setText("5");
                    sudokuBool[8][6] = false;
                    break;
                case 54 : 
                    board86.setText("6");
                    sudokuBool[8][6] = false;
                    break;
                case 55 : 
                    board86.setText("7");
                    sudokuBool[8][6] = false;
                    break;
                case 56 : 
                    board86.setText("8");
                    sudokuBool[8][6] = true;
                    break;
                case 57: 
                    board86.setText("9");
                    sudokuBool[8][6] = false;
                    break;

                default : System.out.println("Invalid number (somehow), try again");
            }
            invalidInputLabel.setText("");
            
        }
        else {
            invalidInputLabel.setText("Invalid input. Try again");
        }
    }//GEN-LAST:event_board86KeyPressed

    private void board87KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_board87KeyPressed
        System.out.println("Key pressed on board[8][7]");
        if (evt.getKeyCode() >= 49 && evt.getKeyCode() <= 57) { //Key code for 1-9 on keyboard is 49-57 (Cannot test numberpad) (i dont have one !!!)
            switch (evt.getKeyCode()) {
                case 49 : 
                    board87.setText("1");
                    sudokuBool[8][7] = true;
                    break;
                case 50 : 
                    board87.setText("2");	
                    sudokuBool[8][7] = false;
                    break;
                case 51 : 
                    board87.setText("3");
                    sudokuBool[8][7] = false;
                    break;
                case 52 : 
                    board87.setText("4");
                    sudokuBool[8][7] = false;
                    break;
                case 53 : 
                    board87.setText("5");
                    sudokuBool[8][7] = false;
                    break;
                case 54 : 
                    board87.setText("6");
                    sudokuBool[8][7] = false;
                    break;
                case 55 : 
                    board87.setText("7");
                    sudokuBool[8][7] = false;
                    break;
                case 56 : 
                    board87.setText("8");
                    sudokuBool[8][7] = false;
                    break;
                case 57: 
                    board87.setText("9");
                    sudokuBool[8][7] = false;
                    break;

                default : System.out.println("Invalid number (somehow), try again");
            }
            invalidInputLabel.setText("");
            
        }
        else {
            invalidInputLabel.setText("Invalid input. Try again");
        }
    }//GEN-LAST:event_board87KeyPressed

    //END OF KEYBOARD LISTENING METHODS
    public void printClicked(int x, int y) {
        System.out.println("Board[" + x + "][" + y + "] clicked");
        invalidInputLabel.setText("Board[" + x + "][" + y + "] clicked");
    }
    
    private void submitButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_submitButtonMouseClicked
        int count = 0;
        for (int i = 0; i < 9; i++) {
            for (int j = 0; j < 9; j++) {
                if (!sudokuBool[i][j] && !played) {
                    highScore -= 10;
                    count++;
                }
            }
        }
        System.out.println("Highscore = " + highScore);
        if (count > 0)
            invalidInputLabel.setText(count + " boxes are incorrect. Try again?");
        else {
            invalidInputLabel.setText("All boxes are correct! Good job!");
            endGame();
        }
        played = true;
    }//GEN-LAST:event_submitButtonMouseClicked

    
    
    private void quitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quitButtonActionPerformed
        dispose();
        //ADD END GAME FRAME HERE!!!
    }//GEN-LAST:event_quitButtonActionPerformed
    
    private void endGame() {
        try {
            Thread.sleep(3000);
        } catch (InterruptedException ex) {
            Logger.getLogger(Pjam_Sudoku.class.getName()).log(Level.SEVERE, null, ex);
        }
        dispose();
        //ALSO ADD END GAME FRAME HERE
    }

        //time and date method
    public final void startClock() {
        Timer timer = new Timer(100, (ActionEvent evt) -> {
            String dateTime = new Date().toString();
            
            clockLabel.setText(dateTime);
        });
        timer.start();
    }
    
    //Reset all values of array and preset filled-in board spots
    public static void sudokuReset() {
        for (int i = 0; i < 9; i++) {
            for (int j = 0; j < 9; j++) {
                sudokuBool[i][j] = false;
            }
        }
        sudokuBool[0][0] = true;
        sudokuBool[0][3] = true;
        sudokuBool[0][5] = true;
        sudokuBool[0][8] = true;
        sudokuBool[1][6] = true;
        sudokuBool[2][1] = true;
        sudokuBool[2][6] = true;
        sudokuBool[2][7] = true;
        sudokuBool[3][0] = true;
        sudokuBool[3][2] = true;
        sudokuBool[3][4] = true;
        sudokuBool[3][6] = true;
        sudokuBool[3][7] = true;
        sudokuBool[4][4] = true;
        sudokuBool[5][1] = true;
        sudokuBool[5][2] = true;
        sudokuBool[5][4] = true;
        sudokuBool[5][6] = true;
        sudokuBool[5][8] = true;
        sudokuBool[6][1] = true;
        sudokuBool[6][2] = true;
        sudokuBool[6][7] = true;
        sudokuBool[7][2] = true;
        sudokuBool[8][0] = true;
        sudokuBool[8][3] = true;
        sudokuBool[8][5] = true;
        sudokuBool[8][8] = true;
        System.out.println("Board reset");
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Pjam_Sudoku.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Pjam_Sudoku.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Pjam_Sudoku.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Pjam_Sudoku.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Pjam_Sudoku().setVisible(true);
                
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel board01;
    private javax.swing.JLabel board02;
    private javax.swing.JLabel board04;
    private javax.swing.JLabel board06;
    private javax.swing.JLabel board07;
    private javax.swing.JLabel board10;
    private javax.swing.JLabel board11;
    private javax.swing.JLabel board12;
    private javax.swing.JLabel board13;
    private javax.swing.JLabel board14;
    private javax.swing.JLabel board15;
    private javax.swing.JLabel board17;
    private javax.swing.JLabel board18;
    private javax.swing.JLabel board20;
    private javax.swing.JLabel board22;
    private javax.swing.JLabel board23;
    private javax.swing.JLabel board24;
    private javax.swing.JLabel board25;
    private javax.swing.JLabel board28;
    private javax.swing.JLabel board31;
    private javax.swing.JLabel board33;
    private javax.swing.JLabel board35;
    private javax.swing.JLabel board38;
    private javax.swing.JLabel board40;
    private javax.swing.JLabel board41;
    private javax.swing.JLabel board42;
    private javax.swing.JLabel board43;
    private javax.swing.JLabel board45;
    private javax.swing.JLabel board46;
    private javax.swing.JLabel board47;
    private javax.swing.JLabel board48;
    private javax.swing.JLabel board50;
    private javax.swing.JLabel board53;
    private javax.swing.JLabel board55;
    private javax.swing.JLabel board57;
    private javax.swing.JLabel board60;
    private javax.swing.JLabel board63;
    private javax.swing.JLabel board64;
    private javax.swing.JLabel board65;
    private javax.swing.JLabel board66;
    private javax.swing.JLabel board68;
    private javax.swing.JLabel board70;
    private javax.swing.JLabel board71;
    private javax.swing.JLabel board73;
    private javax.swing.JLabel board74;
    private javax.swing.JLabel board75;
    private javax.swing.JLabel board76;
    private javax.swing.JLabel board77;
    private javax.swing.JLabel board78;
    private javax.swing.JLabel board81;
    private javax.swing.JLabel board82;
    private javax.swing.JLabel board84;
    private javax.swing.JLabel board86;
    private javax.swing.JLabel board87;
    private java.awt.Label clockLabel;
    private javax.swing.JLabel invalidInputLabel;
    private javax.swing.JButton quitButton;
    private javax.swing.JButton submitButton;
    private javax.swing.JLabel sudokuBoard;
    private javax.swing.JLayeredPane sudokuBoardLayered;
    // End of variables declaration//GEN-END:variables
};